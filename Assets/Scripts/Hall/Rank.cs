using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEngine.EventSystems;using UnityEngine.UI;using USocket.Messages;using XLua;[Hotfix]public class CRankUI{    private static CRankUI instance = new CRankUI();    private GameObject CanvasObj = null;    public List<strCoinRank> m_lstCoinRank; //金钱排行榜    public float m_fLeftCoinRankTime;       //金钱排行榜剩余更新时间    public bool m_bIsCoinRankOpen;      //排行榜界面是否开着    public byte m_iCoinRankState;   //0没事 1需要去服务器更新数据 2等待服务器的数据 3需要把数据更新到面板上    GameObject m_ObjCoinRank;       //金钱排行榜    public List<Sprite> m_lstRankImage; //排名序号的背景图    public static CRankUI Instance    {        get { return instance; }    }    public CRankUI()    {        m_ObjCoinRank = null;        m_fLeftCoinRankTime = 0.0f;        m_bIsCoinRankOpen = false;        m_lstCoinRank = new List<strCoinRank>();        m_lstCoinRank.Clear();        m_iCoinRankState = 1;        RegitserMsgHandle();    }    private void RegitserMsgHandle()    {        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.EMSG_ENUM.CrazyCityMsg_UPDATECOINRANKDATATOCLINT, BackUpdateCoinRank); //更新玩家金钱榜        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.EMSG_ENUM.CrazyCityMsg_NEEDUPDATECOINRANK, BackNeedUpdateCoinRank); //更新玩家金钱榜    }    public void InitRankUIBtnListener(GameObject mainui_)    {        if (CanvasObj == null)            CanvasObj = GameObject.Find("Canvas/Root");        //金钱排行榜        GameObject CoinRank_btn = mainui_.transform.Find("Panelbottom").Find("Left").Find("Button_Ranking").gameObject;        XPointEvent.AutoAddListener(CoinRank_btn, onClickCoinRank, null);    }    public void InitIcons(AssetBundle bundle)    {        m_lstRankImage = new List<Sprite>();        m_lstRankImage.Clear();        Sprite nGlod = bundle.LoadAsset<Sprite>("Ranking_paihang1");        m_lstRankImage.Add(nGlod);        Sprite nSliver = bundle.LoadAsset<Sprite>("Ranking_paihang2");        m_lstRankImage.Add(nSliver);        Sprite nBronze = bundle.LoadAsset<Sprite>("Ranking_paihang3");        m_lstRankImage.Add(nBronze);        Sprite nOther = bundle.LoadAsset<Sprite>("Ranking_paihang4");        m_lstRankImage.Add(nOther);    }    public void UpdateRankUI()    {        if (m_fLeftCoinRankTime > 0.0f)        {            m_fLeftCoinRankTime -= Time.deltaTime;            if (m_bIsCoinRankOpen)                ShowCionRankLeftTime();        }    }    /// <summary>    /// 发送消息到login 获取金钱排行榜    /// </summary>    public void SendGetCoinRankData(short nBeginSign = 0)    {        UMessage LoginMsg = new UMessage((uint)GameCity.EMSG_ENUM.CrazyCityMsg_PLAYERGETCOINRANK);        LoginMsg.Add(nBeginSign);        NetWorkClient.GetInstance().SendMsg(LoginMsg);    }    /// <summary>    /// 保存金钱排行榜的数据    /// </summary>    bool BackUpdateCoinRank(uint _msgType, UMessage _ms)    {        //m_lstCoinRank.Clear();        //int nSize = _ms.ReadInt();        short nBeginSign = _ms.ReadShort();        short nSize = _ms.ReadShort();        if (nBeginSign == 0)            m_lstCoinRank.Clear();        for (int i = 0; i < nSize; i++)        {            strCoinRank nRank = new strCoinRank();            nRank.nUseID = _ms.ReadUInt();            nRank.faceid = _ms.ReadUInt();            nRank.url = _ms.ReadString();            nRank.nCoin = _ms.ReadLong();            nRank.sNickName = _ms.ReadString();            m_lstCoinRank.Add(nRank);            Debug.Log("Add coin rank data！Index：" + i.ToString() +                " Name:" + nRank.sNickName +                " Coin:" + nRank.nCoin.ToString());        }        if (nBeginSign == -1)        {            CCustomDialog.CloseCustomWaitUI();            if (m_iCoinRankState == 2)                FillCoinRankData();            else                m_iCoinRankState = 3;        }        else        {            nBeginSign += nSize;            SendGetCoinRankData(nBeginSign);        }        return true;    }    /// <summary>    /// 服务器通知客户端需要更新排行榜    /// </summary>    bool BackNeedUpdateCoinRank(uint _msgType, UMessage _ms)    {        m_iCoinRankState = 1;        m_fLeftCoinRankTime = _ms.ReadSingle();        Debug.Log("服务器通知客户端需要更新排行榜数据！LeftCoinRankTime:%f" + m_fLeftCoinRankTime);        return true;    }    void onClickCoinRank(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype != EventTriggerType.PointerUp)            return;        m_bIsCoinRankOpen = true;        ShowCoinBankInterface();    }    //展示排行榜界面    public void ShowCoinBankInterface()    {        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        if (bundle == null)            return;        if (null == m_ObjCoinRank)        {            Object tipsobj = bundle.LoadAsset("Lobby_Ranking");            m_ObjCoinRank = (GameObject)GameMain.instantiate(tipsobj);            //GameObject background = GameObject.Find("Canvas/Root");            m_ObjCoinRank.transform.SetParent(CanvasObj.transform, false);            XPointEvent.AutoAddListener(m_ObjCoinRank.transform.Find("ImageBG").Find("ButtonClose").gameObject, OnClickCoinRankClose, null);        }        m_ObjCoinRank.SetActive(true);        //0没事 1需要去服务器更新数据 2等待服务器的数据 3需要把数据更新到面板上        if (m_iCoinRankState == 0)        {            GameObject subback = m_ObjCoinRank.transform.Find("ImageBG").Find("Ranking_List").Find("Content_RankingList").gameObject;            for (int index = subback.transform.childCount - 1; index >= 0; index--)            {                GameMain.safeDeleteObj(subback.transform.GetChild(index).gameObject);            }            FillCoinRankData();            return;        }        else if (m_iCoinRankState == 1)        {            CCustomDialog.OpenCustomWaitUI(1014);            SendGetCoinRankData();            m_iCoinRankState = 2;            GameObject subback = m_ObjCoinRank.transform.Find("ImageBG").Find("Ranking_List").Find("Content_RankingList").gameObject;            for (int index = subback.transform.childCount - 1; index >= 0; index--)            {                GameMain.safeDeleteObj(subback.transform.GetChild(index).gameObject);            }            return;        }        else if (m_iCoinRankState == 2)            return;        else if (m_iCoinRankState == 3)        {            FillCoinRankData();            m_iCoinRankState = 0;        }    }    void FillCoinRankData()    {        m_iCoinRankState = 0;        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        if (bundle == null)            return;        ShowCionRankLeftTime();        GameObject subback = m_ObjCoinRank.transform.Find("ImageBG").Find("Ranking_List").Find("Content_RankingList").gameObject;        GameObject objSelfRank = m_ObjCoinRank.transform.Find("ImageBG").Find("Ranking_Own").gameObject;        if (m_lstCoinRank.Count <= 0)        {            objSelfRank.SetActive(false);            return;        }        else            objSelfRank.SetActive(true);        Image nPic, nPic2;        Text strIndex, strName, strCoin;        int nSelfIndex = -1;        //subback.transform.localPosition = Vector3.zero;        for (int i = 0; i < m_lstCoinRank.Count; i++)        {            if (m_lstCoinRank[i].nUseID == GameMain.hall_.GetPlayerId())                nSelfIndex = i;            Object tipsobj = bundle.LoadAsset("Ranking_Coin");            GameObject nSubRank = (GameObject)GameMain.instantiate(tipsobj);            nSubRank.transform.SetParent(subback.transform, false);            nPic = nSubRank.transform.Find("RankingBG").gameObject.GetComponent<Image>();            if (i <= 2)            {                if (m_lstRankImage.Count >= i)                    nPic.sprite = m_lstRankImage[i];            }            else                nPic.sprite = m_lstRankImage[m_lstRankImage.Count - 1];            nPic2 = nSubRank.transform.Find("Image_HeadImage").gameObject.GetComponent<Image>();            nPic2.sprite = GameMain.hall_.GetIcon(m_lstCoinRank[i].url, m_lstCoinRank[i].nUseID, (int)m_lstCoinRank[i].faceid);            strIndex = nSubRank.transform.Find("RankingBG").Find("TextNum").gameObject.GetComponent<Text>();            int index = i + 1;            strIndex.text = index.ToString();            strName = nSubRank.transform.Find("TextName").gameObject.GetComponent<Text>();            strName.text = m_lstCoinRank[i].sNickName;            strCoin = nSubRank.transform.Find("TextCoin").gameObject.GetComponent<Text>();            strCoin.text = m_lstCoinRank[i].nCoin.ToString();        }        nPic2 = objSelfRank.transform.Find("Image_HeadImage").gameObject.GetComponent<Image>();        nPic2.sprite = GameMain.hall_.GetIcon(GameMain.hall_.GetPlayerData().GetPlayerIconURL(),            GameMain.hall_.GetPlayerId(), (int)GameMain.hall_.GetPlayerData().PlayerIconId);        strIndex = objSelfRank.transform.Find("RankingBG").Find("TextNum").gameObject.GetComponent<Text>();        strName = objSelfRank.transform.Find("TextName").gameObject.GetComponent<Text>();        strName.text = GameMain.hall_.GetPlayerData().GetPlayerName();        strCoin = objSelfRank.transform.Find("TextCoin").gameObject.GetComponent<Text>();        strCoin.text = GameMain.hall_.GetPlayerData().GetCoin().ToString();        if (nSelfIndex == -1)   //未上榜        {            nPic = objSelfRank.transform.Find("RankingBG").gameObject.GetComponent<Image>();            nPic.sprite = m_lstRankImage[m_lstRankImage.Count - 1];            strIndex.text = "未上榜";        }        else        {            nPic = objSelfRank.transform.Find("RankingBG").gameObject.GetComponent<Image>();            if (nSelfIndex <= 2)                nPic.sprite = m_lstRankImage[nSelfIndex];            else                nPic.sprite = m_lstRankImage[m_lstRankImage.Count - 1];            int index = nSelfIndex + 1;            strIndex.text = index.ToString();        }    }    void ShowCionRankLeftTime()    {        if (null != m_ObjCoinRank)        {            Text subTime = m_ObjCoinRank.transform.Find("ImageBG").Find("ImageBG_Top").Find("TextTime").Find("TextNum").gameObject.GetComponent<Text>();            subTime.text = GetCoinBankLeftTime();        }    }    // 获取金钱排行榜剩余时间的  显示    public string GetCoinBankLeftTime()    {        System.TimeSpan ts = new System.TimeSpan(0, 0, (int)m_fLeftCoinRankTime);        string str = "";        if (ts.Hours > 0)        {            if (ts.Hours < 10)                str += "0";            str += ts.Hours.ToString() + ":";        }        else        {            str += "00" + ":";        }        if (ts.Minutes > 0)        {            if (ts.Minutes < 10)                str += "0";            str += ts.Minutes.ToString() + ":";        }        else        {            str += "00" + ":";        }        if (ts.Seconds > 0)        {            if (ts.Seconds < 10)                str += "0";            str += ts.Seconds;        }        else        {            str += "00";        }        return str;    }    void OnClickCoinRankClose(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype != EventTriggerType.PointerUp)            return;        m_bIsCoinRankOpen = false;        m_ObjCoinRank.SetActive(false);    }}