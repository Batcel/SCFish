using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEngine.EventSystems;using UnityEngine.UI;using System;using USocket.Messages;using System.Text;using XLua;[Hotfix]public class Club{    public GameObject clubPanel_;    GameObject texttip_;    uint level_;    long maxGive_;    long minGive_;    int oke_;    //private GameObject CanvasObj;    List<Sprite> clubSprites_;    public UClubListInfo cli_;    public Club(GameObject canvas)    {        //CanvasObj = canvas;        cli_ = new UClubListInfo();        InitClubMsg();    }    // Use this for initialization    public void Start()    {        oke_ = 0;        GameKind.AddFlag(1, ref oke_);        GameKind.AddFlag(2, ref oke_);        GameKind.AddFlag(3, ref oke_);        maxGive_ = 200000;        minGive_ = GuildData.Instance().m_GuildCsvData[0].GiveLimit;        LoadClubResource();        InitSprites();    }    void LoadClubResource()    {        if (clubPanel_ == null)        {            AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);            if (bundle != null)            {                UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Lobby_Club");                clubPanel_ = (GameObject)GameMain.instantiate(obj0);                clubPanel_.SetActive(false);                GameObject background = GameObject.Find("Canvas/Root");                clubPanel_.transform.SetParent(background.transform, false);            }        }        texttip_ = clubPanel_.transform.Find("Tips").gameObject;        InitGive();        InitClubSet();        InitCreateClub();        InitOneKeyExpel();        InitRules();        InitSearch();        InitContent();        //InitChangeContent();        InitOneKeyJoin();    }    void InitSprites()    {        clubSprites_ = new List<Sprite>();        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        if (bundle != null)        {            for (int index = 0; index < 4; index++)            {                Sprite tempSprite = bundle.LoadAsset<Sprite>("Club_icon_0" + (index + 1).ToString());                clubSprites_.Add(tempSprite);            }        }    }    // Update is called once per frame    public void Update()    {        ShowBreakTime();    }    void InitContent()    {        GameObject contentPanel = texttip_.transform.Find("Tips_Xuanyan").gameObject;        GameObject okBtn = contentPanel.transform.Find("ButtonOk").gameObject;        //InputField content = contentPanel.transform.FindChild("InputName").gameObject.GetComponent<InputField>();        XPointEvent.AutoAddListener(okBtn, onChangeContent, null);        GameObject cancelBtn = contentPanel.transform.Find("ButtonCancel").gameObject;        XPointEvent.AutoAddListener(cancelBtn, EventCloseTip, null);    }    void ShowContentPanel(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            Text contentTx = clubPanel_.transform.Find("Club_Main").Find("Middle").                Find("Right").Find("TextContent").gameObject.GetComponent<Text>();            texttip_.SetActive(true);            GameObject contentPanel = texttip_.transform.Find("Tips_Xuanyan").gameObject;            contentPanel.SetActive(true);            InputField xuanyan = contentPanel.transform.Find("InputName").gameObject.GetComponent<InputField>();            xuanyan.text = contentTx.text;        }    }    void InitChangeContent()    {        GameObject contentBtn = clubPanel_.transform.Find("Club_Main").Find("Middle").            Find("Right").Find("ButtonXiuGai").gameObject;        if (GameMain.hall_.GetPlayerData().GetPlayerID() == GuildData.Instance().GuildCreatePlayerID)        {            contentBtn.SetActive(true);            XPointEvent.AutoAddListener(contentBtn, ShowContentPanel, null);        }        else        {            contentBtn.SetActive(false);        }    }    void onChangeContent(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            GameObject contentPanel = texttip_.transform.Find("Tips_Xuanyan").gameObject;            InputField content = contentPanel.transform.Find("InputName").gameObject.GetComponent<InputField>();            if (System.Text.Encoding.UTF8.GetBytes(content.text).Length > 450)            {                CCustomDialog.OpenCustomConfirmUI(1223);                return;            }            UMessage ccMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubChangeContent);            UClubContent cc = new UClubContent();            cc.clubid = GuildData.Instance().GuildID;            cc.content = content.text;            cc.SetSendData(ccMsg);            NetWorkClient.GetInstance().SendMsg(ccMsg);            content.text = "";            CloseTips();        }    }    public void SetContent(string content)    {        Text contentTx = clubPanel_.transform.Find("Club_Main").Find("Middle").            Find("Right").Find("TextContent").gameObject.GetComponent<Text>();        contentTx.text = content;    }    public void ShowClub()    {        LoadClubResource();        clubPanel_.SetActive(true);        if (texttip_ != null)            texttip_.SetActive(false);        GameObject clubfind = clubPanel_.transform.Find("Club_Find").gameObject;        GameObject clubMain = clubPanel_.transform.Find("Club_Main").gameObject;        InitClubInfo();        //未加入公会        if (GameMain.hall_.GetPlayerData().GetGuildID() == 0)        {            clubfind.SetActive(true);            clubMain.SetActive(false);        }        else        {            //已加入公会            clubMain.SetActive(true);            clubfind.SetActive(false);        }    }    void InitSearch()    {        GameObject clubfindBtn = clubPanel_.transform.Find("Club_Find").            Find("Bottom").Find("Search").Find("ButtonSearch").gameObject;        XPointEvent.AutoAddListener(clubfindBtn, Search, null);    }    void Search(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            //UMessage csMsg = new UMessage((uint)GameCity.EMSG_ENUM.CrazyCityMsg_CLUB_TOTAL);            //UClubSearch cs = new UClubSearch();            InputField ClubSearchName = clubPanel_.transform.Find("Club_Find").Find("Bottom").Find("Search").Find("InputField").gameObject.GetComponent<InputField>();            //cs.searchName = ClubSearchName.text;            //cs.SetSendData(csMsg);            //NetWorkClient.GetInstance().SendMsg(csMsg);            string searchName = ClubSearchName.text;            if (searchName.Length == 0)            {                 CCustomDialog.OpenCustomConfirmUI(1229);                return;            }            bool issearch = false;            for (int index = 0; index < cli_.clubs.Count; index++)            {                if(cli_.clubs[index].clubName.Contains(searchName))                {                    issearch = true;                    ClubInfo ci = new ClubInfo();                    ci.clubid = cli_.clubs[index].clubid;                    ci.clubName = cli_.clubs[index].clubName;                    ci.clubLevel = cli_.clubs[index].clubLevel;                    ci.memberNumber = cli_.clubs[index].memberNumber;                    ci.maxMember = cli_.clubs[index].maxMember;                    ci.condition = cli_.clubs[index].condition;                    ci.content = cli_.clubs[index].content;                    AddClubSearchResult(ci);                }            }            if(!issearch)                CCustomDialog.OpenCustomConfirmUI(1207);            else                ClearClubList();        }    }    void CleraChilds(GameObject obj)    {        int count = obj.transform.childCount;        for (int index = 0; index < count; index++)        {            GameMain.safeDeleteObj(obj.transform.GetChild(0).gameObject);        }    }    void InitClubInfo()    {        //未加入公会        if (GameMain.hall_.GetPlayerData().GetGuildID() == 0)        {            GameObject clubList = clubPanel_.transform.Find("Club_Find").            Find("Middle").Find("Club_list").            Find("Club_Viewport").gameObject;            GameObject clubParent = clubList.transform.Find("Club_Content").gameObject;            CleraChilds(clubParent);            AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);            if (bundle != null)            {                for (int index = 0; index < cli_.clubNumber; index++)                {                    UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_Info");                    GameObject info = (GameObject)GameMain.instantiate(obj0);                    info.transform.SetParent(clubParent.transform, false);                    Image icon = info.transform.Find("ImageIcon").gameObject.GetComponent<Image>();                    if (cli_.clubs[index].clubLevel == 0)                        cli_.clubs[index].clubLevel = 1;                    icon.sprite = clubSprites_[(int)cli_.clubs[index].clubLevel - 1];                    Text name = info.transform.Find("TextName").gameObject.GetComponent<Text>();                    name.text = cli_.clubs[index].clubName;                    Text members = info.transform.Find("TextNum").gameObject.GetComponent<Text>();                    members.text = cli_.clubs[index].memberNumber.ToString() +                        "/" + GuildData.Instance().m_GuildCsvData[(int)cli_.clubs[index].clubLevel - 1].MaxPlayer.ToString();                    Text condition = info.transform.Find("TextCondition").gameObject.GetComponent<Text>();                    condition.text = "Lv" + ((int)cli_.clubs[index].condition).ToString();                    Text notice = info.transform.Find("ImageNoticeBG").Find("TextNotice").gameObject.GetComponent<Text>();                    notice.text = cli_.clubs[index].content;                    GameObject joinbtn = info.transform.Find("GroupButton").Find("ButtonJoin").gameObject;                    XPointEvent.AutoAddListener(joinbtn, Join2Club, cli_.clubs[index]);                }                GameObject clubFind = clubPanel_.transform.Find("Club_Find").gameObject;                GameObject backBtn = clubFind.transform.Find("Top").Find("ButtonReturn").gameObject;                XPointEvent.AutoAddListener(backBtn, Back2Hall, null);                GameObject bottom = clubPanel_.transform.Find("Club_Find").                    Find("Bottom").Find("ButtonCreation").gameObject;                XPointEvent.AutoAddListener(bottom, onCreatClub, null);                GameObject textvip = clubPanel_.transform.Find("Club_Find").                    Find("Bottom").Find("ButtonVIP").gameObject;                if (GameMain.hall_.GetPlayerData().GetVipLevel() >= 3)                    textvip.SetActive(false);            }        }        //已加入公会        else        {            InitChangeContent();            if (GuildData.Instance().GuildLevel == 0)                GuildData.Instance().GuildLevel = 1;            GameObject clubMain = clubPanel_.transform.Find("Club_Main").gameObject;            //clubMain.SetActive(true);            GameObject backBtn = clubMain.transform.Find("Top").Find("ButtonReturn").gameObject;            XPointEvent.AutoAddListener(backBtn, Back2Hall, null);            GameObject rule = clubMain.transform.Find("Top").Find("ButtonRule").gameObject;            XPointEvent.AutoAddListener(rule, ShowRule, null);            Image icon = clubMain.transform.Find("Middle").Find("Left").Find("ImageIcon").gameObject.GetComponent<Image>();            if((int)GuildData.Instance().GuildLevel <= clubSprites_.Count)                icon.sprite = clubSprites_[(int)GuildData.Instance().GuildLevel - 1];            Text id = clubMain.transform.Find("Middle").Find("Left").Find("TextID").gameObject.GetComponent<Text>();            id.text = "ID:" + GuildData.Instance().GuildID.ToString();            Text name = clubMain.transform.Find("Middle").Find("Left").Find("TextName").gameObject.GetComponent<Text>();            name.text = GuildData.Instance().GuildName;            Text level = clubMain.transform.Find("Middle").Find("Left").Find("TextLV").gameObject.GetComponent<Text>();            string[] levelName = { "青铜", "白银", "黄金", "钻石" };            level.text = levelName[GuildData.Instance().GuildLevel - 1] + "俱乐部";            GameObject breakBtn = clubMain.transform.Find("Middle").Find("Left").Find("GroupButton").Find("Button1").gameObject;            XPointEvent.AutoAddListener(breakBtn, BreakClub, null);            GameObject exitBtn = clubMain.transform.Find("Middle").Find("Left").Find("GroupButton").Find("Button2").gameObject;            XPointEvent.AutoAddListener(exitBtn, ExitClub, null);            Text admin = clubMain.transform.Find("Middle").Find("Left").                Find("TextAdministrator").Find("Text").gameObject.GetComponent<Text>();            admin.text = GuildData.Instance().GuildCreatePlayerName.ToString();            Text members = clubMain.transform.Find("Middle").Find("Left").                Find("TextNum").Find("Text").gameObject.GetComponent<Text>();            if (GuildData.Instance().GuildMemberNum <= GuildData.Instance().m_GuildCsvData[(int)GuildData.Instance().GuildLevel - 1].MaxPlayer)                members.color = new Color(0.0f, 1.0f, 0.0f);            else                members.color = new Color(1.0f, 0.0f, 0.0f);            members.text = GuildData.Instance().GuildMemberNum.ToString() + "/"                + GuildData.Instance().m_GuildCsvData[(int)GuildData.Instance().GuildLevel - 1].MaxPlayer.ToString();            Text WelFare = clubMain.transform.Find("Middle").Find("Left").                Find("TextWelfare").Find("Text").gameObject.GetComponent<Text>();            WelFare.text = GuildData.Instance().GuildMoney.ToString();            Text bossreward = clubMain.transform.Find("Middle").Find("Left").                Find("TextBoss").Find("Text").gameObject.GetComponent<Text>();            bossreward.text = "获得成员充值的" + GuildData.Instance().m_GuildCsvData[(int)GuildData.Instance().GuildLevel - 1].Discount + "%返利";            Text content = clubMain.transform.Find("Middle").Find("Right").                Find("TextContent").gameObject.GetComponent<Text>();            content.text = GuildData.Instance().GuildContent;            Text activeRate = clubMain.transform.Find("Middle").Find("Bottom").                Find("TextActive").Find("TextActive (1)").gameObject.GetComponent<Text>();            activeRate.text = GuildData.Instance().GuildActive.ToString();            ShowBreakTime();            Image strip = clubMain.transform.Find("Middle").Find("Bottom").                Find("ImageStripBG").Find("ImageStrip").gameObject.GetComponent<Image>();            strip.fillAmount = CaculateAmount((float)GuildData.Instance().GuildActive);             for (int index = 0; index < 3; index++)            {                string imgName = "";                if (index == 0)                    imgName = "ImageSign";                else                    imgName = "ImageSign (" + index.ToString() + ")";                GameObject levelimg = clubMain.transform.Find("Middle").Find("Bottom").                    Find("ImageStripBG").Find(imgName).Find("ImageLight").gameObject;                GameObject levelname = clubMain.transform.Find("Middle").Find("Bottom").                    Find("ImageStripBG").Find(imgName).Find("Text").gameObject;                if (index + 1 < GuildData.Instance().GuildLevel)                {                    levelimg.SetActive(true);                    levelname.SetActive(true);                }                else                {                    levelimg.SetActive(false);                    levelname.SetActive(false);                }            }            if (GameMain.hall_.GetPlayerData().GetPlayerName() == GuildData.Instance().GuildCreatePlayerName)            {                breakBtn.SetActive(true);                exitBtn.SetActive(false);                clubMain.transform.Find("Middle").Find("Left").                Find("TextBoss").gameObject.SetActive(true);            }            else            {                exitBtn.SetActive(true);                breakBtn.SetActive(false);                clubMain.transform.Find("Middle").Find("Left").                Find("TextBoss").gameObject.SetActive(false);            }            GameObject managerBtn = clubMain.transform.Find("Bottom").Find("ButtonManage").gameObject;            XPointEvent.AutoAddListener(managerBtn, ManagerClub, null);            GameObject giveBtn = clubMain.transform.Find("Bottom").                Find("ButtonGive").gameObject;            XPointEvent.AutoAddListener(giveBtn, Give, null);        }    }    float CaculateAmount(float active)    {        float result = 0.0f;        if (GuildData.Instance().GuildLevel >= 4)            return 1.0f;        float max = (float)GuildData.Instance().m_GuildCsvData[(int)GuildData.Instance().GuildLevel].ClubMinExp;        for(int index = 1; index < GuildData.Instance().m_GuildCsvData.Count; index++)        {            if (active >= GuildData.Instance().m_GuildCsvData[index].ClubMinExp)                result += 0.3f;            else            {                float delta = (float)GuildData.Instance().m_GuildCsvData[(int)GuildData.Instance().GuildLevel - 1].ClubMinExp;                if (index < 3)                    result += (active - delta) * 0.3f / (max - delta);                else                    result += (active - delta) * 0.4f / (max - delta);                break;            }        }        return result;    }    void ShowBreakTime()    {        if (clubPanel_ == null)            return;        GameObject clubMain = clubPanel_.transform.Find("Club_Main").gameObject;        Text breakTime = clubMain.transform.Find("Middle").Find("Bottom").            Find("TextActive").Find("TextActive (2)").gameObject.GetComponent<Text>();        if (GuildData.Instance().GuildBreakTime == 0)            breakTime.text = "";        else        {            DateTime currentTime = DateTime.Now;            DayOfWeek weekday = currentTime.DayOfWeek;            uint day = 7 - (uint)weekday;            uint hour = 24 - (uint)currentTime.Hour;            uint minute = 60 - (uint)currentTime.Minute;            uint second = 60 - (uint)currentTime.Second;            breakTime.text = "解散倒计时:" + day.ToString() + "天" + hour.ToString() + "时" + minute.ToString() + "分" + second.ToString() + "秒";        }    }    public void ClearClubList()    {        GameObject clubList = clubPanel_.transform.Find("Club_Find").            Find("Middle").Find("Club_list").            Find("Club_Viewport").Find("Club_Content").gameObject;        CleraChilds(clubList);    }    public void AddClubSearchResult(ClubInfo club)    {        if (club.clubLevel == 0)            return;        GameObject clubList = clubPanel_.transform.Find("Club_Find").                    Find("Middle").Find("Club_list").                    Find("Club_Viewport").gameObject;        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        if (bundle == null)            return;        UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_Info");        GameObject info = (GameObject)GameMain.instantiate(obj0);        info.transform.SetParent(clubList.transform.Find("Club_Content"), false);        Image icon = info.transform.Find("ImageIcon").gameObject.GetComponent<Image>();        if(club.clubLevel <= clubSprites_.Count && club.clubLevel > 0)            icon.sprite = clubSprites_[(int)club.clubLevel - 1];        Text name = info.transform.Find("TextName").gameObject.GetComponent<Text>();        name.text = club.clubName;        Text members = info.transform.Find("TextNum").gameObject.GetComponent<Text>();        members.text = club.memberNumber.ToString() + "/" + GuildData.Instance().m_GuildCsvData[(int)club.clubLevel - 1].MaxPlayer.ToString();        Text condition = info.transform.Find("TextCondition").gameObject.GetComponent<Text>();        condition.text = "Lv" + ((int)club.condition).ToString();        Text notice = info.transform.Find("ImageNoticeBG").Find("TextNotice").gameObject.GetComponent<Text>();        notice.text = club.content;        GameObject joinbtn = info.transform.Find("GroupButton").Find("ButtonJoin").gameObject;        XPointEvent.AutoAddListener(joinbtn, Join2Club, club);    }    void ManagerClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            InitClubManager();            GameObject clubManager = clubPanel_.transform.Find("Club_Manage").gameObject;            clubManager.SetActive(true);            GameObject backBtn = clubManager.transform.Find("Top").                Find("ButtonReturn").gameObject;            XPointEvent.AutoAddListener(backBtn, Back2Club, null);            GameObject oneKey = clubManager.transform.Find("Middle").                Find("TopText").Find("ButtonOne-key").gameObject;            XPointEvent.AutoAddListener(oneKey, ExpelAll, null);        }    }    public void InitClubManager()    {        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        GameObject memberList = clubPanel_.transform.Find("Club_Manage").            Find("Middle").Find("Member_list").            Find("Member_Viewport").Find("Member_Content").gameObject;        CleraChilds(memberList);        if (bundle != null)        {            for (int index = 0; index < GuildData.Instance().GuildMemberNum; index++)            {                UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_Member_Info");                GameObject member = (GameObject)GameMain.instantiate(obj0);                member.transform.SetParent(memberList.transform, false);                Image icon = member.transform.Find("ImageHeadIcon").gameObject.GetComponent<Image>();                //Debug.Log("icon index~~~~~~~~~~" + GuildData.Instance().m_GuildMemberList[index].icon);                icon.sprite = GameMain.hall_.GetIcon(GuildData.Instance().m_GuildMemberList[index].url,                     GuildData.Instance().m_GuildMemberList[index].useid, (int)GuildData.Instance().m_GuildMemberList[index].icon);                Text name = member.transform.Find("TextName").gameObject.GetComponent<Text>();                name.text = GuildData.Instance().m_GuildMemberList[index].name;                Text vip = member.transform.Find("TextVIP").gameObject.GetComponent<Text>();                vip.text = GuildData.Instance().m_GuildMemberList[index].vipLevel.ToString();                Text gx = member.transform.Find("TextGongxian").gameObject.GetComponent<Text>();                gx.text = GuildData.Instance().m_GuildMemberList[index].active.ToString();                Text state = member.transform.Find("TextZhuangtai").gameObject.GetComponent<Text>();                if (GuildData.Instance().m_GuildMemberList[index].online)                {                    state.text = "在线";                    state.color = new Color(0.0f, 1.0f, 0.0f);                }                else                    state.text = "离线";                GameObject expel = member.transform.Find("ButtonKickOut").gameObject;                if (GameMain.hall_.GetPlayerData().GetPlayerName() == GuildData.Instance().GuildCreatePlayerName                    && GameMain.hall_.GetPlayerId() != GuildData.Instance().m_GuildMemberList[index].useid)                {                    int tempid = index;                    XPointEvent.AutoAddListener(expel, Expel, tempid);                }                else                {                    expel.SetActive(false);                }            }        }        GameObject clubManager = clubPanel_.transform.Find("Club_Manage").gameObject;        GameObject oneKey = clubManager.transform.Find("Middle").Find("TopText").Find("ButtonOne-key").gameObject;        GameObject setClub = clubPanel_.transform.Find("Club_Manage").Find("Bottom").Find("ButtonSet").gameObject;        XPointEvent.AutoAddListener(setClub, SetClub, null);        if (GameMain.hall_.GetPlayerData().GetPlayerName() == GuildData.Instance().GuildCreatePlayerName)        {            oneKey.SetActive(true);            setClub.SetActive(true);        }        else        {            oneKey.SetActive(false);            setClub.SetActive(false);        }    }    void SetPanel(bool isShow)    {        texttip_.SetActive(isShow);        GameObject setPanel = texttip_.transform.Find("Tips_JiaRuXianZhi").gameObject;        setPanel.SetActive(isShow);    }    void SetClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            SetPanel(true);        }    }    void Expel(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            UMessage emMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondExpel);            UExpelMsg em = new UExpelMsg();            em.expelID = (int)button;            em.clubid = GuildData.Instance().GuildID;            em.SetSendData(emMsg);            NetWorkClient.GetInstance().SendMsg(emMsg);        }    }    void OneKeyExpel(bool isShow)    {        texttip_.SetActive(isShow);        GameObject onekeyExpelPanel = texttip_.transform.Find("Tips_YiJianTiChu").gameObject;        onekeyExpelPanel.SetActive(isShow);    }    void ExpelAll(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            OneKeyExpel(true);        }    }    void Back2Club(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            GameObject clubManager = clubPanel_.transform.Find("Club_Manage").gameObject;            clubManager.SetActive(false);        }    }    void GivePanel(bool isShow)    {        texttip_.SetActive(isShow);        GameObject givePanel = texttip_.transform.Find("Tips_Give").gameObject;        givePanel.SetActive(isShow);    }    void Give(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            GivePanel(true);        }    }    /// <summary>    /// 退出俱乐部对话框回调    /// </summary>    /// <param name="pragma"></param>    public void ConfirmQuitClubCallBack(object pragma)    {        int selectstate = (int)pragma;        //确定退出        if(selectstate == 1)        {            UMessage ecMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ExitClub);            UExitClub ec = new UExitClub();            ec.userid = GameMain.hall_.GetPlayerId();            ec.clubid = GuildData.Instance().GuildID;            ec.SetSendData(ecMsg);            NetWorkClient.GetInstance().SendMsg(ecMsg);        }    }    /// <summary>    /// 解散俱乐部对话框回调    /// </summary>    /// <param name="pragma"></param>    public void ConfirmBreakClubCallBack(object pragma)    {        int selectstate = (int)pragma;        //确定解散        if (selectstate == 1)        {            UMessage cbMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubBreak);            UClubBreak cb = new UClubBreak();            cb.clubid = GuildData.Instance().GuildID;            cb.SetSendData(cbMsg);            NetWorkClient.GetInstance().SendMsg(cbMsg);        }    }    void BreakClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            CCustomDialog.OpenCustomDialogWithTipsID(1216, ConfirmBreakClubCallBack);        }    }    void ExitClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            CCustomDialog.OpenCustomDialogWithTipsID(1215, ConfirmQuitClubCallBack);        }    }    void ShowRule(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            texttip_.SetActive(true);            GameObject rule = clubPanel_.transform.Find("Tips").Find("Tips_LvRule").gameObject;            rule.SetActive(true);        }    }    void Back2Hall(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            clubPanel_.SetActive(false);        }    }    void Join2Club(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            //int maxPlayer = GuildData.Instance().m_GuildCsvData[(int)((ClubInfo)button).clubLevel - 1].MaxPlayer;            //if (((ClubInfo)button).memberNumber >= maxPlayer)            //{            //    CCustomDialog.OpenCustomConfirmUI(1219);            //    return;            //}            UMessage cjmMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondJoin);            UClubJoinMsg cjm = new UClubJoinMsg();            cjm.playerID = GameMain.hall_.GetPlayerId();            cjm.clubID = ((ClubInfo)button).clubid;            cjm.SetSendData(cjmMsg);            NetWorkClient.GetInstance().SendMsg(cjmMsg);        }    }    //公会设置    void InitClubSet()    {        GameObject conditions = clubPanel_.transform.Find("Tips").Find("Tips_JiaRuXianZhi").Find("ImageBG").            Find("ViewportXianZhi").Find("ContentXianZhi").gameObject;        for (uint index = 0; index < 5; index++)        {            string name;            if (index == 0)                name = "XianZhiTiaoJian";            else                name = "XianZhiTiaoJian (" + index.ToString() + ")";            Toggle condition = conditions.transform.Find(name).gameObject.GetComponent<Toggle>();            uint temp = index;            condition.onValueChanged.AddListener(delegate (bool check) { OnChangeCondition(temp); });        }        GameObject confirm = clubPanel_.transform.Find("Tips").Find("Tips_JiaRuXianZhi").Find("ButtonOK").gameObject;        XPointEvent.AutoAddListener(confirm, SetCondition, conditions);        GameObject closebtn = clubPanel_.transform.Find("Tips").Find("Tips_JiaRuXianZhi").Find("ButtonClose").gameObject;        XPointEvent.AutoAddListener(closebtn, EventCloseTip, null);    }    void OnChangeCondition(uint level)    {        level_ = level;    }    void SetCondition(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            UMessage cccMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondChangeJoinCondition);            UClubChangeCondition ccc = new UClubChangeCondition();            ccc.clubid = GuildData.Instance().GuildID;            ccc.condition = (char)level_;            ccc.SetSendData(cccMsg);            NetWorkClient.GetInstance().SendMsg(cccMsg);            CloseTips();        }    }    void ShowClubSet()    {        GameObject tips = clubPanel_.transform.Find("Tips").Find("Tips_JiaRuXianZhi").gameObject;        tips.SetActive(true);    }    void EventCloseTip(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            CloseTips();        }    }    void SendCode(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {        }    }    //验证手机    void ConfirmTelephone()    {        GameObject ctp = clubPanel_.transform.Find("Tips").Find("Tips_YanZhengShouJi").gameObject;        GameObject confirmBtn = ctp.transform.Find("ButtonOk").gameObject;        XPointEvent.AutoAddListener(confirmBtn, Confirming, null);        GameObject cancelBtn = ctp.transform.Find("ButtonCancel").gameObject;        XPointEvent.AutoAddListener(cancelBtn, EventCloseTip, null);        GameObject sendBtn = ctp.transform.Find("ButtonSend").gameObject;        XPointEvent.AutoAddListener(sendBtn, SendCode, null);    }    void Confirming(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {        }    }    //创建俱乐部    void InitCreateClub()    {        GameObject cc = clubPanel_.transform.Find("Tips").Find("Tips_Creation").gameObject;        GameObject confirmBtn = cc.transform.Find("ButtonOk").gameObject;        XPointEvent.AutoAddListener(confirmBtn, CreateClub, null);        GameObject cancelBtn = cc.transform.Find("ButtonCancel").gameObject;        XPointEvent.AutoAddListener(cancelBtn, EventCloseTip, null);    }    /// <summary>    /// 点击创建俱乐部按钮    /// </summary>    /// <param name="eventtype"></param>    /// <param name="button"></param>    /// <param name="eventData"></param>    void onCreatClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            //创建条件初步判断            if (GameMain.hall_.GetPlayerData().GetVipLevel() < 3)            {                CCustomDialog.OpenCustomConfirmUI(1201);                return;            }            CreationPanel(true);        }    }    void CreationPanel(bool isShow)    {        texttip_.SetActive(isShow);        GameObject cc = clubPanel_.transform.Find("Tips").Find("Tips_Creation").gameObject;        cc.SetActive(isShow);    }    /// <summary>    /// 点击创建俱乐部确定按钮    /// </summary>    /// <param name="eventtype"></param>    /// <param name="button"></param>    /// <param name="eventData"></param>    void CreateClub(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            //创建条件初步判断            if (GameMain.hall_.GetPlayerData().GetVipLevel() < 3)            {                CCustomDialog.OpenCustomConfirmUI(1201);                return;            }            InputField inputID = clubPanel_.transform.Find("Tips").Find("Tips_Creation").                Find("InputName").gameObject.GetComponent<InputField>();            if (string.IsNullOrEmpty(inputID.text))            {                CCustomDialog.OpenCustomConfirmUI(1220);                return;            }            //byte[] name = System.Text.Encoding.ASCII.GetBytes(inputID.text);            //Encoding.UTF8.GetString(name, 0, name.Length)            if (System.Text.Encoding.UTF8.GetBytes(inputID.text).Length > 24)            {                CCustomDialog.OpenCustomConfirmUI(1221);                return;            }            UMessage ccmMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubScondCreate);            UCreateClubMsg ccm = new UCreateClubMsg();            ccm.playerid = GameMain.hall_.GetPlayerId();            ccm.clubName = inputID.text;            ccm.SetSendData(ccmMsg);            NetWorkClient.GetInstance().SendMsg(ccmMsg);            texttip_.SetActive(false);            GameObject cc = clubPanel_.transform.Find("Tips").Find("Tips_Creation").gameObject;            cc.SetActive(false);        }    }    //俱乐部等级规则    void InitRules()    {        GameObject rules = clubPanel_.transform.Find("Tips").Find("Tips_LvRule").gameObject;        GameObject closeBtn = rules.transform.Find("ImageBG").Find("ButtonClose").gameObject;        XPointEvent.AutoAddListener(closeBtn, EventCloseTip, null);    }    //赠送    void InitGive()    {        GameObject givePanel = clubPanel_.transform.Find("Tips").Find("Tips_Give").gameObject;        GameObject confirmBtn = givePanel.transform.Find("ButtonOk").gameObject;        XPointEvent.AutoAddListener(confirmBtn, GiveMoney2Friend, null);        GameObject cancelBtn = givePanel.transform.Find("ButtonCancel").gameObject;        XPointEvent.AutoAddListener(cancelBtn, EventCloseTip, null);        GameObject friendobj = givePanel.transform.Find("ButtonHaoYou").gameObject;        XPointEvent.AutoAddListener(friendobj, FriendList, null);        Slider moneyNum = givePanel.transform.Find("SliderNum").Find("Slider").gameObject.GetComponent<Slider>();        moneyNum.onValueChanged.AddListener(delegate (float call) { ChangeGivenMoney(call); });        Text moneyTx = givePanel.transform.Find("SliderNum").Find("Text").gameObject.GetComponent<Text>();        int money = 0;        moneyTx.text = money.ToString() + "/" + maxGive_.ToString();        InputField accessid = clubPanel_.transform.Find("Tips").Find("Tips_Give").            Find("InputField_Name").gameObject.GetComponent<InputField>();        accessid.onEndEdit.AddListener(delegate (string id) { FindPlayerById(id); });        InputField give = clubPanel_.transform.Find("Tips").Find("Tips_Give").            Find("InputField_Num").gameObject.GetComponent<InputField>();        give.onValueChanged.AddListener(delegate (string call) { InputGivenMoney(call); });    }    void InputGivenMoney(string call)    {        GameObject givePanel = clubPanel_.transform.Find("Tips").Find("Tips_Give").gameObject;        Slider moneyNum = givePanel.transform.Find("SliderNum").Find("Slider").gameObject.GetComponent<Slider>();        long result = 0;        long.TryParse(call, out result);        long money = result;        if (money >= maxGive_)        {            InputField give = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("InputField_Num").gameObject.GetComponent<InputField>();            give.text = maxGive_.ToString();            Text moneyTx = givePanel.transform.Find("SliderNum").Find("Text").gameObject.GetComponent<Text>();            moneyTx.text = maxGive_.ToString() + "/" + maxGive_.ToString();            moneyNum.value = 1.0f;            return;        }        float value = (float)money / maxGive_;        if (value <= 0.001f)        {            Text moneyTx = givePanel.transform.Find("SliderNum").Find("Text").gameObject.GetComponent<Text>();            moneyTx.text = money.ToString() + "/" + maxGive_.ToString();            moneyNum.value = 0.0f;            return;        }        moneyNum.value = value;    }    void ChangeGivenMoney(float call)    {        GameObject givePanel = clubPanel_.transform.Find("Tips").Find("Tips_Give").gameObject;        Text moneyTx = givePanel.transform.Find("SliderNum").Find("Text").gameObject.GetComponent<Text>();        long money = (long)Math.Round(call * maxGive_);        moneyTx.text = money.ToString() + "/" + maxGive_.ToString();        Text giveBG = clubPanel_.transform.Find("Tips").Find("Tips_Give").            Find("InputField_Num").Find("Placeholder").gameObject.GetComponent<Text>();        giveBG.text = "";        InputField give = clubPanel_.transform.Find("Tips").Find("Tips_Give").            Find("InputField_Num").gameObject.GetComponent<InputField>();        give.text = money.ToString();    }    uint FindPlayerIdByName(string name)    {        uint result = 0;        for (int index = 0; index < GuildData.Instance().GuildMemberNum; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == GameMain.hall_.GetPlayerId())                continue;            if (!GuildData.Instance().m_GuildMemberList[index].online)                continue;            if (GuildData.Instance().m_GuildMemberList[index].name == name)                result = GuildData.Instance().m_GuildMemberList[index].useid;        }        return result;    }    void FindPlayerById(string id)    {        uint result = 0;        uint.TryParse(id, out result);        for(int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == result)            {                GuildPlayerData playerdata = new GuildPlayerData();                playerdata.useid = GuildData.Instance().m_GuildMemberList[index].useid;                playerdata.name = GuildData.Instance().m_GuildMemberList[index].name;                playerdata.icon = GuildData.Instance().m_GuildMemberList[index].icon;                InputField accessid = clubPanel_.transform.Find("Tips").Find("Tips_Give").                    Find("InputField_Name").gameObject.GetComponent<InputField>();                accessid.text = playerdata.useid.ToString();                Image accessIcon = clubPanel_.transform.Find("Tips").Find("Tips_Give").                    Find("playerInfo").Find("Image_HeadBG").Find("Image_HeadMask").                    Find("Image_HeadImage").gameObject.GetComponent<Image>();                accessIcon.sprite = GameMain.hall_.GetIcon(playerdata.url, playerdata.useid, (int)playerdata.icon);                Text accessName = clubPanel_.transform.Find("Tips").Find("Tips_Give").                    Find("playerInfo").Find("Text_Name").gameObject.GetComponent<Text>();                accessName.text = playerdata.name;                break;            }        }    }    void GiveMoney2Friend(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            InputField accessid = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("InputField_Name").gameObject.GetComponent<InputField>();            Text give = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("InputField_Num").Find("Text").gameObject.GetComponent<Text>();            uint accessID = 0;            uint.TryParse(accessid.text, out accessID);            if(accessID == 0)            {                CCustomDialog.OpenCustomConfirmUI(1204);                return;            }            if(accessID == GameMain.hall_.GetPlayerId())            {                CCustomDialog.OpenCustomConfirmUI(1228);                return;            }            long result = 0;            long.TryParse(give.text, out result);            if(result <= 0)            {                CCustomDialog.OpenCustomConfirmUI(1222);                return;            }            if(GameMain.hall_.GetPlayerData().GetCoin() < minGive_)            {                CCustomDialog.OpenCustomConfirmUI(1309);                return;            }            if(result > GameMain.hall_.GetPlayerData().GetCoin())            {                CCustomDialog.OpenCustomConfirmUI(1310);                return;            }            UMessage givemsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondGive);            UClubGive cg = new UClubGive();            cg.accessID = accessID;            cg.giveID = GameMain.hall_.GetPlayerId();                        cg.money = result;            cg.SetSendData(givemsg);            NetWorkClient.GetInstance().SendMsg(givemsg);            GivePanel(false);        }    }    void ShowFriendList()    {        //if (GuildData.Instance().m_GuildMemberList.Count == 1)        //    return;        InitFriendList();        //GameMain.clubMemberList.SetActive(true);    }    static int GiveRecordNumber = 4;    void InitRecord(AssetBundle bundle)    {        if (texttip_ == null)            return;        GameObject recordList = texttip_.transform.Find("Tips_NameList").            Find("Viewport_GiveRecord").Find("Content_GiveRecord").gameObject;        CleraChilds(recordList);        List<uint> idcollection = new List<uint>();        for (int index = 0; index < PlayerInfoUI.Instance.m_GiveRecordDataList.Count; index++)        {            if (PlayerInfoUI.Instance.m_GiveRecordDataList[index].GiveType != 1)                continue;            if (idcollection.Contains(PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerId))                continue;            if (index > GiveRecordNumber)                break;            UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_GiveRecord");            GameObject friendBtn = (GameObject)GameMain.instantiate(obj0);            Text nameText = friendBtn.transform.Find("Text_Name").gameObject.GetComponent<Text>();            nameText.text = PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerName;            //Text moneyText = friendBtn.transform.FindChild("Text_Num").gameObject.GetComponent<Text>();            //moneyText.text = PlayerInfoUI.Instance.m_GiveRecordDataList[index].GiveCoinNum.ToString();            Image icon = friendBtn.transform.Find("Image_HeadBG").                Find("Image_HeadMask").Find("Image_HeadImage").gameObject.GetComponent<Image>();            icon.sprite = GameMain.hall_.GetIcon(PlayerInfoUI.Instance.m_GiveRecordDataList[index].url,                PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerId,                PlayerInfoUI.Instance.m_GiveRecordDataList[index].Faceid);            friendBtn.transform.SetParent(recordList.transform, false);            GuildPlayerData playerdata = new GuildPlayerData();            playerdata.useid = PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerId;            playerdata.name = PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerName;            playerdata.icon = (uint)PlayerInfoUI.Instance.m_GiveRecordDataList[index].Faceid;            idcollection.Add(PlayerInfoUI.Instance.m_GiveRecordDataList[index].GivePlayerId);            XPointEvent.AutoAddListener(friendBtn, SelectFriend, playerdata);        }    }    void InitFriendList()    {        GameObject namelistBG = texttip_.transform.Find("Tips_NameList").gameObject;        namelistBG.SetActive(true);        GameObject namelist = texttip_.transform.Find("Tips_NameList").            Find("Viewport_ClubName").Find("Content_ClubName").gameObject;        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        CleraChilds(namelist);        if (bundle != null)        {            for (int index = 0; index < GuildData.Instance().GuildMemberNum; index++)            {                if (GuildData.Instance().m_GuildMemberList[index].useid == GameMain.hall_.GetPlayerId())                    continue;                if (!GuildData.Instance().m_GuildMemberList[index].online)                    continue;                UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_NameList");                GameObject friendBtn = (GameObject)GameMain.instantiate(obj0);                Text nameText = friendBtn.transform.Find("Text").gameObject.GetComponent<Text>();                nameText.text = GuildData.Instance().m_GuildMemberList[index].name;                Image icon = friendBtn.transform.Find("Image_HeadBG").Find("Image_HeadMask").Find("Image_HeadImage").gameObject.GetComponent<Image>();                icon.sprite = GameMain.hall_.GetIcon(GuildData.Instance().m_GuildMemberList[index].url,                    GuildData.Instance().m_GuildMemberList[index].useid,                    (int)GuildData.Instance().m_GuildMemberList[index].icon);                friendBtn.transform.SetParent(namelist.transform, false);                XPointEvent.AutoAddListener(friendBtn, SelectFriend, GuildData.Instance().m_GuildMemberList[index]);            }            InitRecord(bundle);        }        GameObject closeBtn = texttip_.transform.Find("Tips_NameList").Find("ButtonClose").gameObject;        XPointEvent.AutoAddListener(closeBtn, CloseFriendList, null);        //GameObject namelist = GameMain.clubMemberList.transform.FindChild("ImageBG").        //    FindChild("Viewport_ClubName").FindChild("Content_ClubName").gameObject;        //AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        //CleraChilds(namelist);        //if (bundle != null)        //{        //    for (int index = 0; index < GuildData.Instance().GuildMemberNum; index++)        //    {        //        if (GuildData.Instance().m_GuildMemberList[index].useid == GameMain.hall_.GetPlayerId())        //            continue;        //        if (!GuildData.Instance().m_GuildMemberList[index].online)        //            continue;        //        UnityEngine.Object obj0 = (GameObject)bundle.LoadAsset("Club_NameList");        //        GameObject friendBtn = (GameObject)GameMain.instantiate(obj0);        //        Text nameText = friendBtn.transform.FindChild("Text").gameObject.GetComponent<Text>();        //        nameText.text = GuildData.Instance().m_GuildMemberList[index].name;        //        friendBtn.transform.SetParent(namelist.transform, false);        //        int tempindex = index;        //        XPointEvent.AutoAddListener(friendBtn, SelectFriend, tempindex);        //    }        //}        //GameObject closeBtn = GameMain.clubMemberList.transform.FindChild("ImageBG").FindChild("ButtonClose").gameObject;        //XPointEvent.AutoAddListener(closeBtn, CloseFriendList, null);    }    void CloseFriendList(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            //GameMain.clubMemberList.SetActive(false);            GameObject namelist = texttip_.transform.Find("Tips_NameList").gameObject;            namelist.SetActive(false);        }    }    void SelectFriend(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            GameObject namelist = texttip_.transform.Find("Tips_NameList").gameObject;            namelist.SetActive(false);            //GameMain.clubMemberList.SetActive(false);            GuildPlayerData selectplayer = (GuildPlayerData)button;            InputField accessid = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("InputField_Name").gameObject.GetComponent<InputField>();            //InputField give = clubPanel_.transform.FindChild("Tips").FindChild("Tips_Give").            //    FindChild("InputField_Num").gameObject.GetComponent<InputField>();            accessid.text = selectplayer.useid.ToString();            Image accessIcon = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("playerInfo").Find("Image_HeadBG").Find("Image_HeadMask").                Find("Image_HeadImage").gameObject.GetComponent<Image>();            accessIcon.sprite = GameMain.hall_.GetIcon(selectplayer.url, selectplayer.useid, (int)selectplayer.icon);            Text accessName = clubPanel_.transform.Find("Tips").Find("Tips_Give").                Find("playerInfo").Find("Text_Name").gameObject.GetComponent<Text>();            accessName.text = selectplayer.name;            //GameObject givePanel = clubPanel_.transform.FindChild("Tips").FindChild("Tips_Give").gameObject;            //GameObject confirmBtn = givePanel.transform.FindChild("ButtonOk").gameObject;            //XPointEvent.AutoAddListener(confirmBtn, GiveMoney2Friend, GuildData.Instance().m_GuildMemberList[(int)button].useid);        }    }    void FriendList(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            ShowFriendList();        }    }    //一键踢出界面    void InitOneKeyExpel()    {        GameObject oke = clubPanel_.transform.Find("Tips").Find("Tips_YiJianTiChu").gameObject;        GameObject confirmBtn = oke.transform.Find("ButtonOK").gameObject;        XPointEvent.AutoAddListener(confirmBtn, OneKeyExpel, null);        GameObject closeBtn = oke.transform.Find("ButtonClose").gameObject;        XPointEvent.AutoAddListener(closeBtn, EventCloseTip, null);        GameObject group = oke.transform.Find("ImageBG").Find("ViewportTiChu").Find("ContentTiChu").gameObject;        for (int index = 0; index < 3; index++)        {            string name;            if (index == 0)                name = "TiChuTiaoJian";            else                name = "TiChuTiaoJian (" + index.ToString() + ")";            int temp = index;            Toggle t = group.transform.Find(name).gameObject.GetComponent<Toggle>();            t.onValueChanged.AddListener(delegate (bool check) { ExpelCondition(check, temp + 1); });        }    }    void ExpelCondition(bool check, int index)    {        if (check)        {            if (!GameKind.HasFlag(index, oke_))                GameKind.AddFlag(index, ref oke_);        }        else        {            if (GameKind.HasFlag(index, oke_))                GameKind.RemoveFlag<int>(index, ref oke_);        }    }    void OneKeyExpel(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            UMessage ceoMes = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondExpelOneKey);            UClubExpelOneKey ceo = new UClubExpelOneKey();            ceo.clubid = GuildData.Instance().GuildID;            ceo.Time2Expel = (byte)oke_;            ceo.SetSendData(ceoMes);            NetWorkClient.GetInstance().SendMsg(ceoMes);            CloseTips();        }    }    void CloseTips()    {        GameObject tips = clubPanel_.transform.Find("Tips").gameObject;        tips.SetActive(false);        for (int index = 1; index < tips.transform.childCount; index++)        {            tips.transform.GetChild(index).gameObject.SetActive(false);        }    }        void InitOneKeyJoin()    {        GameObject okj = clubPanel_.transform.Find("Club_Find").            Find("Middle").Find("TopText").Find("ButtonOne-key").gameObject;        XPointEvent.AutoAddListener(okj, OneKeyJoin, null);    }    void OneKeyJoin(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            for(int index = 0; index < cli_.clubs.Count; index++)            {                if(GameMain.hall_.GetPlayerData().GetVipLevel() >= cli_.clubs[index].condition)                {                    UMessage cjmMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondJoin);                    UClubJoinMsg cjm = new UClubJoinMsg();                    cjm.playerID = GameMain.hall_.GetPlayerId();                    cjm.clubID = cli_.clubs[index].clubid;                    cjm.SetSendData(cjmMsg);                    NetWorkClient.GetInstance().SendMsg(cjmMsg);                    return;                }            }            CCustomDialog.OpenCustomConfirmUI(1227);        }    }    bool BackClubInfo(uint _msgType, UMessage _ms)    {        if (!PlayerInfoUI.Instance.bHaveRequestGiveRecordData)        {            PlayerInfoUI.Instance.bHaveRequestGiveRecordData = true;            PlayerInfoUI.Instance.m_GiveRecordDataList.Clear();            PlayerInfoUI.Instance.RequestGiveRecordData(0);        }        if (GameMain.hall_.GetPlayerData().GetGuildID() == 0)            cli_.ReadData(_ms);        else            GuildData.Instance().InitData(_ms);        if (HallMain.gametcpclient == null)        {            ShowClub();            return false;        }        if (!HallMain.gametcpclient.IsSocketConnected)        {            ShowClub();        }        return true;    }    bool BackClubCreate(uint _msgType, UMessage _ms)    {        int clubid = _ms.ReadInt();        if (clubid == 0)        {            CCustomDialog.OpenCustomConfirmUI(1208);            return false;        }        if (clubid == -1)        {            CCustomDialog.OpenCustomConfirmUI(1201);            return false;        }        uint playerid = _ms.ReadUInt();        string playerName = _ms.ReadString();        string clubName = _ms.ReadString();        GameMain.hall_.GetPlayerData().SetGuildID((uint)clubid);        GameMain.hall_.GetPlayerData().SetGuildName(clubName);        GuildData.Instance().GuildID = (uint)clubid;        GuildData.Instance().GuildLevel = 1;        GuildData.Instance().GuildCreatePlayerName = playerName;        GuildData.Instance().GuildName = clubName;        GuildData.Instance().GuildMemberNum = 1;        GuildData.Instance().GuildMaxMemberNum = 10;        GuildData.Instance().GuildActive = 0;        GuildData.Instance().GuildMoney = 0;        GuildData.Instance().GuildContent = "";        GuildData.Instance().GuildCreatePlayerID = GameMain.hall_.GetPlayerId();        GuildData.Instance().GuildBreakTime = 0;        GuildPlayerData gpd = new GuildPlayerData();        gpd.useid = playerid;        gpd.name = playerName;        gpd.vipLevel = GameMain.hall_.GetPlayerData().GetVipLevel();        gpd.active = 0;        gpd.online = true;        gpd.icon = GameMain.hall_.GetPlayerData().PlayerIconId;        GuildData.Instance().m_GuildMemberList.Clear();        GuildData.Instance().m_GuildMemberList.Add(gpd);        ShowClub();        cli_.clubs.Clear();        return true;    }    bool BackClubSearch(uint _msgType, UMessage _ms)    {        ClearClubList();        while (true)        {            ClubInfo ci = new ClubInfo();            ci.clubid = _ms.ReadUInt();            if (ci.clubid == 0)            {                CCustomDialog.OpenCustomConfirmUI(1207);                break;            }            ci.clubName = _ms.ReadString();            ci.clubLevel = _ms.ReadChar();            ci.memberNumber = _ms.ReadUInt();            ci.maxMember = _ms.ReadUInt();            ci.condition = _ms.ReadChar();            ci.content = _ms.ReadString();            AddClubSearchResult(ci);        }        return true;    }    bool BackClubJoin(uint _msgType, UMessage _ms)    {        uint joinid = _ms.ReadUInt();        GuildData.Instance().InitData(_ms);        if (GuildData.Instance().failedid == 1)        {            CCustomDialog.OpenCustomConfirmUI(1219);            return false;        }        if (GuildData.Instance().failedid == 2)        {            CCustomDialog.OpenCustomConfirmUI(1214);            return false;        }        if (GuildData.Instance().failedid == 3)        {            CCustomDialog.OpenCustomConfirmUI(1212);            return false;        }        bool isself = GameMain.hall_.GetPlayerData().GetPlayerID() == joinid;        GameMain.hall_.GetPlayerData().SetGuildID(GuildData.Instance().GuildID);        if (isself)        {            ShowClub();            GameMain.hall_.GetPlayerData().SetGuildID(GuildData.Instance().GuildID);        }        return true;    }    bool BackClubExit(uint _msgType, UMessage _ms)    {        uint clubid = _ms.ReadUInt();        uint playerid = _ms.ReadUInt();        if (playerid == GameMain.hall_.GetPlayerId())        {            GameMain.hall_.GetPlayerData().SetGuildID(0);            UMessage clubMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondInfo);            UClubInfo ci = new UClubInfo();            ci.userID = GameMain.hall_.GetPlayerId();            ci.SetSendData(clubMsg);            NetWorkClient.GetInstance().SendMsg(clubMsg);            return false;        }        for (int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == playerid)            {                GuildData.Instance().m_GuildMemberList.Remove(GuildData.Instance().m_GuildMemberList[index]);                GuildData.Instance().GuildMemberNum -= 1;                break;            }        }        //ShowClubPanel();        return true;    }    bool BackClubExpel(uint _msgType, UMessage _ms)    {        uint playerid = _ms.ReadUInt();        if (playerid == GameMain.hall_.GetPlayer().GetPlayerId())        {            GameMain.hall_.GetPlayerData().SetGuildID(0);            if (clubPanel_.activeSelf)            {                CCustomDialog.OpenCustomConfirmUI(1226);                ShowClub();            }            return false;        }        for (int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == playerid)            {                GuildData.Instance().m_GuildMemberList.Remove(GuildData.Instance().m_GuildMemberList[index]);                GuildData.Instance().GuildMemberNum -= 1;                break;            }        }        if (GameMain.hall_.GetPlayerId() == GuildData.Instance().GuildCreatePlayerID)        {            InitClubManager();        }        return true;    }    bool BackClubGive(uint _msgType, UMessage _ms)    {        uint playerid = _ms.ReadUInt();        long coin = _ms.ReadLong();        if (coin == -1 && playerid == GameMain.hall_.GetPlayerData().GetPlayerID())        {            CCustomDialog.OpenCustomConfirmUI(1204);            return false;        }        if (coin == -2 && playerid == GameMain.hall_.GetPlayerData().GetPlayerID())        {            CCustomDialog.OpenCustomConfirmUIWithFormatParam(1225, _ms.ReadInt());            return false;        }        GameMain.hall_.GetPlayerData().SetCoin(coin);        //RefreshShopPlayerCoinText();        GameMain.hall_.RefreshPlayerCurrency();        if (playerid == GameMain.hall_.GetPlayerData().GetPlayerID())        {            CCustomDialog.OpenCustomConfirmUI(1203);            if (GameMain.hall_.isGetRelief)                GameMain.hall_.ShowRelief();        }        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        InitRecord(bundle);        return true;    }    bool BackClubJoinCondition(uint _msgType, UMessage _ms)    {        CCustomDialog.OpenCustomConfirmUI(1213);        return true;    }    bool BackClubChangeContent(uint _msgType, UMessage _ms)    {        string content = _ms.ReadString();        SetContent(content);        GuildData.Instance().GuildContent = content;        return true;    }    bool BackClubBreak(uint _msgType, UMessage _ms)    {        if (cli_ != null)        {            for (int index = 0; index < cli_.clubs.Count; index++)            {                if (cli_.clubs[index].clubid == GameMain.hall_.GetPlayerData().GetGuildID())                {                    cli_.clubs.Remove(cli_.clubs[index]);                    break;                }            }            if (cli_.clubNumber > 0)                cli_.clubNumber -= 1;        }        GameMain.hall_.GetPlayerData().SetGuildID(0);        CCustomDialog.OpenCustomConfirmUI(1212);        //if (GuildData.Instance().GuildCreatePlayerID != PlayerObj.GetPlayerId())        //    return false;        UMessage clubMsg = new UMessage((uint)GameCity.ClubSecondMsg.CM_ClubSecondInfo);        UClubInfo ci = new UClubInfo();        ci.userID = GameMain.hall_.GetPlayerId();        ci.SetSendData(clubMsg);        NetWorkClient.GetInstance().SendMsg(clubMsg);        return true;    }    bool BackClubChangeActive(uint _msgType, UMessage _ms)    {        uint clubid = _ms.ReadUInt();        long clubacitve = _ms.ReadLong();        byte clubstep = _ms.ReadByte();        uint playerid = _ms.ReadUInt();        long playeractive = _ms.ReadLong();        byte playervip = _ms.ReadByte();        GuildData.Instance().GuildLevel = clubstep;        GuildData.Instance().GuildActive = clubacitve;        for (int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == playerid)            {                GuildData.Instance().m_GuildMemberList[index].active += playeractive;                GuildData.Instance().m_GuildMemberList[index].vipLevel = playervip;                break;            }        }        return true;    }    bool BackClubChangeStep(uint _msgType, UMessage _ms)    {        uint clubid = _ms.ReadUInt();        byte level = _ms.ReadByte();        GuildData.Instance().GuildLevel = level;        return true;    }    bool BackClubMemberLOE(uint _msgType, UMessage _ms)    {        uint clubid = _ms.ReadUInt();        if (GuildData.Instance().GuildID != clubid)            return false;        uint playerid = _ms.ReadUInt();        bool isonline = _ms.ReadBool();        for (int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (playerid == GuildData.Instance().m_GuildMemberList[index].useid)            {                GuildData.Instance().m_GuildMemberList[index].online = isonline;                break;            }        }        return true;    }    bool BackClubMemberNameIcon(uint _msgType, UMessage _ms)    {        uint useid = _ms.ReadUInt();        uint faceid = _ms.ReadUInt();        string url = _ms.ReadString();        string name = _ms.ReadString();        for (int index = 0; index < GuildData.Instance().m_GuildMemberList.Count; index++)        {            if (GuildData.Instance().m_GuildMemberList[index].useid == useid)            {                if (GuildData.Instance().GuildCreatePlayerID == useid)                {                    GuildData.Instance().GuildCreatePlayerName = name;                }                GuildData.Instance().m_GuildMemberList[index].icon = faceid;                GuildData.Instance().m_GuildMemberList[index].url = url;                GuildData.Instance().m_GuildMemberList[index].name = name;                break;            }        }        return true;    }    bool BackCreateClubRefreshList(uint _msgType, UMessage _ms)    {        ClubInfo info = new ClubInfo();        info.clubid = _ms.ReadUInt();        info.clubName = _ms.ReadString();        info.memberNumber = _ms.ReadUInt();        info.maxMember = _ms.ReadUInt();        info.clubLevel = _ms.ReadUInt();        info.content = _ms.ReadString();        info.condition = _ms.ReadChar();        cli_.clubs.Add(info);        cli_.clubNumber += 1;        return true;    }    bool BackBreakClubRefreshList(uint _msgType, UMessage _ms)    {        uint clubid = _ms.ReadUInt();        for (int index = 0; index < cli_.clubs.Count; index++)        {            if (cli_.clubs[index].clubid == clubid)            {                cli_.clubs.Remove(cli_.clubs[index]);                break;            }        }        cli_.clubNumber -= 1;        return true;    }    GameObject clubreward;    bool FirstJoinClubReward(uint _msgType, UMessage _ms)    {        uint addcoin = _ms.ReadUInt();        byte isChangeName = _ms.ReadByte();        long currentCoin = _ms.ReadLong();        GameMain.hall_.GetPlayerData().SetCoin(currentCoin);        GameMain.hall_.RefreshPlayerCurrency();        if (clubreward == null)        {            AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);            if (bundle == null)                return false;            UnityEngine.Object clubobj = (GameObject)bundle.LoadAsset("Tips_Buy");            clubreward = (GameObject)GameMain.instantiate(clubobj);            GameObject background = GameObject.Find("Canvas/Root");            clubreward.transform.SetParent(background.transform, false);            Text title = clubreward.transform.Find("ImageBG").Find("GroupText").Find("TextTop").gameObject.GetComponent<Text>();            title.text = "领取成功";            Text coin = clubreward.transform.Find("ImageBG").Find("TextInfo").gameObject.GetComponent<Text>();            coin.text = addcoin.ToString() + "金币";        }        return true;    }    void OnCloseClubReward(EventTriggerType eventtype, object parma, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            if (clubreward == null)                return;            clubreward.SetActive(false);        }    }    void InitClubMsg()    {        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSecondInfo, BackClubInfo);                             //俱乐部基本信息        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubScondCreate, BackClubCreate);                          //创建俱乐部        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSearch, BackClubSearch);                               //查找俱乐部        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSecondJoin, BackClubJoin);                             //加入俱乐部        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ExitClub, BackClubExit);                                   //退出俱乐部        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSecondExpel, BackClubExpel);                           //踢人        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSecondGive, BackClubGive);                             //赠送        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubSecondChangeJoinCondition, BackClubJoinCondition);     //加入条件        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubChangeContent, BackClubChangeContent);                 //修改宣言        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubBreak, BackClubBreak);                                 //解散俱乐部        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubChangeActive, BackClubChangeActive);                   //俱乐部修改活跃度        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubChangeStep, BackClubChangeStep);                       //俱乐部修改等级        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubMemberLoginOrExit, BackClubMemberLOE);                 //俱乐部玩家登陆下线消息         CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubMemberChangeNameOrIcon, BackClubMemberNameIcon);       //俱乐部玩家修改名称头像        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubCreateRefreshList, BackCreateClubRefreshList);         //俱乐部创建后刷新列表        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.ClubSecondMsg.SM_ClubBreakRefreshList, BackBreakClubRefreshList);           //俱乐部解散后刷新列表        CMsgDispatcher.GetInstance().RegMsgDictionary(            (uint)GameCity.EMSG_ENUM.CrazyCityMsg_FIRSTADDCLUBREWORD, FirstJoinClubReward);            //首次加入俱乐部奖励    }}