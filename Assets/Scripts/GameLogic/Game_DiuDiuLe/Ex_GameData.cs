using System.Collections.Generic;using UnityEngine;using XLua;[Hotfix]public class Ex_GameData
{    //所有的牌    public static byte[] STD_CARDS = new byte[]{        (byte)0x01,(byte)0x02,(byte)0x03,(byte)0x04,(byte)0x05,(byte)0x06,(byte)0x07,(byte)0x08,(byte)0x09,(byte)0x0A,(byte)0x0B,(byte)0x0C,(byte)0x0D,  //#梅花   1-K        (byte)0x11,(byte)0x12,(byte)0x13,(byte)0x14,(byte)0x15,(byte)0x16,(byte)0x17,(byte)0x18,(byte)0x19,(byte)0x1A,(byte)0x1B,(byte)0x1C,(byte)0x1D,  //#方块   1-K        (byte)0x21,(byte)0x22,(byte)0x23,(byte)0x24,(byte)0x25,(byte)0x26,(byte)0x27,(byte)0x28,(byte)0x29,(byte)0x2A,(byte)0x2B,(byte)0x2C,(byte)0x2D,  //#红桃   1-K        (byte)0x31,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x35,(byte)0x36,(byte)0x37,(byte)0x38,(byte)0x39,(byte)0x3A,(byte)0x3B,(byte)0x3C,(byte)0x3D,  //#黑桃   1-K        (byte)0x41,(byte)0x42                                                          //小王 大王    };    public static string HTTPURL = "http://73.hanyou.com:8050";//"http://192.166.0.71:8050";//"http://192.166.0.145:8050";//测试 http://192.166.0.36:8050  正式 http://m0332.baiduwebgame.com:8050    public static string SOCKETURL = "73.hanyou.com";//正式"73.hanyou.com";//测试 192.166.0.127    public static int SOCKETPORT = 9001;//测试 7002  正式 9001 达标场 普通场 游戏大厅    public static string ACCOUNT = "";    public static string MIMA = "";    public static string PWD = "";    public static uint myUserId = 0;//自己的userID    public static uint otherUserId = 0;//别人的userID    public static uint otherFaceId = 0;
    public static string otherUrl = "";    public static string myName = "";    public static int mySilver = 0;    public static int myMedal = 0;    public static string myFaceUrl = "";    public static int Difen = 0;    public static int DabiaoFen = 0;    public static int JiangjinFen = 0;    public static int areaId = 0;//1 普通场 2 达标场     public static int regionId = 0;    public static string TOKEN = "";    public static int TotalCount = 0;    public static bool isDengLu = false;    public static bool isXinshou = false;    //public static Dictionary<string, List<Dictionary<string,int>>> DataList = new Dictionary<string, List<Dictionary<string, int>>>();    public static Ex_SMGamelimit SMGamelimit;    public static Ex_SMSitDown SMSitDownData;    public static Ex_SMGameStart SMGameStartData;    public static bool isReconect = false;    public static Ex_SMGameScene SMGameScene;    public static bool IsInGame = false;//是否在普通场的游戏中    public static int GAMEID = 601;//游戏ID	public static int PROTOVERSION = 1;//版本ID    public static bool SOUNDCONFIG = true;//音效    public static bool BGSOUNDCONFIG = true;//背景音乐    public static bool ISPLAYING = false;//是否正在游戏界面游戏中（目前tableUI且游戏开始至游戏结束之间,用于后台唤起判断是否重连）    //public static CreateSound(name:string)    //{    //    SoundManager.ins.playEffect(name);    //}    //public static playBgSound(b:boolean)    //{    //    if (b)    //    {    //        SoundManager.ins.setMusicVolume(0.8);    //    }    //    if (!b)    //    {    //        SoundManager.ins.setMusicVolume(0);    //    }    //}    /**        * 得到出牌位置        * @param count 要出几张牌        * @returns {{xArr: number[], rArr: number[]}} x位置数据 r旋转角度数据        * localposition        */    public static Dictionary<string,List<int>> chupaiPos(int count)    {        Dictionary<string, List<int>> rt = new Dictionary<string, List<int>>();        List<int> xxArr = new List<int>();        List<int> rrArr = new List<int>();        int face = Random.value * 100 > 50 ? 1 : -1;        int centrePos = 290;        if (count == 1)        {            xxArr.Add(centrePos + face * (int)(Random.value * 20) - 540 / 2);            rrArr.Add(face * (int)(5 + Random.value * 25));        }        if (count == 2)        {            int rand = (int)(Random.value * 100);            if (rand <= 50)            {                xxArr.Add(centrePos - (int)(Random.value * 20 + 20) - 540 / 2);                rrArr.Add(face * (int)(15 + Random.value * 25));                xxArr.Add(centrePos + (int)(Random.value * 20 + 20) - 540 / 2);                rrArr.Add(face * (int)(15 + Random.value * 25));            }            else            {                xxArr.Add(centrePos - (int)(Random.value * 20 + 20) - 540 / 2);                rrArr.Add(-(int)(5 + Random.value * 25));                xxArr.Add(centrePos + (int)(Random.value * 20 + 20) - 540 / 2);                rrArr.Add((int)(5 + Random.value * 25));            }        }        if (count == 3)        {            xxArr.Add(centrePos - (int)(Random.value * 10 + 40) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos + (int)(Random.value * 10 + 40) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));        }        if (count == 4)        {            xxArr.Add(centrePos - (int)(Random.value * 10 + 60) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos - (int)(Random.value * 10 + 20) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos + (int)(Random.value * 10 + 20) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos + (int)(Random.value * 10 + 60) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));        }        if (count == 5)        {            xxArr.Add(centrePos - (int)(Random.value * 10 + 80) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos - (int)(Random.value * 10 + 40) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos + (int)(Random.value * 10 + 40) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));            xxArr.Add(centrePos + (int)(Random.value * 10 + 80) - 540 / 2);            rrArr.Add(face * (int)(15 + Random.value * 10));        }        rt.Add("xArr",xxArr);        rt.Add("rArr",rrArr);        return rt;    }    //public static returnMainUI()    //{    //    egret.Tween.removeAllTweens();    //    MainScene.removeChildren();    //    MainScene.addChild(MainUI.i());    //}    //public static returnAllUI()    //{    //    dragonBones.WorldClock.clock.clear();    //    egret.Tween.removeAllTweens();    //    MainScene.removeChildren();    //    if (MyNet._instance)    //    {    //        MyNet.i().close();    //    }    //    MainScene = null;    //    GameData.isDengLu = false;    //    GameData.IsInGame = false;    //    RES.destroyRes("ex_allres");    //    RES.destroyRes("ex_loading");    //    dragonBones.WorldClock.clock.clear();    //    Common.backHall();    //    GameData.playBgSound(false);    //        for(var key in GameData.carKey)    //    {    //        var car:dragonBones.Armature = GameData.carKey[key].buildArmature("armatureName");    //        car.dispose();    //    }    //    GameData.carKey = { };    //}    /**        * 玩家姓名显示限制，如果是6个汉字（12个字符）就全部显示，        * 多于12个字符或者6个字就显示5个字+...或者10个字符+...        * 5个字符或者4个+...        * 3个汉字或2个+...        */    public static string getName(string str)       //byteset === 'utf-8'    {        int total = 0;        int byteCode;        int i;        int len;        string preStr = "";        bool flag = false;   //是否超过5个字        byte[] bytes = System.Text.Encoding.Default.GetBytes(str);        for(i = 0,len = str.Length;i<len;i++) {            byteCode = bytes[i];            if(byteCode <= 0x007f) {                //                total += 1;                total += 2;            } else                if(byteCode <= 0x07ff) {                    total += 2;                } else                    if(byteCode <= 0xffff) {                        total += 4;                        //                total += 2;                    } else {                        total += 4;                    }            if(total > 20) {                if(!flag) {                    flag = true;                    preStr = str.Substring(0,i)+"...";                }            }        }        if(total <= 24) {            return str;        } else {            return preStr;        }    }}