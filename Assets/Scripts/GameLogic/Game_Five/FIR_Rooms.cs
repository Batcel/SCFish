using System.Collections.Generic;using USocket.Messages;public class RoomPlayerInfo{    public RoomPlayerInfo()    {        isleft = true;        name = "";        icon = 0;        url = "";        money = 0;        playerid = 0;        isready = false;    }    public bool isleft;    public string name;    public uint icon;    public string url;    public long money;    public uint playerid;    public bool isready;}public class Room{    public Room(uint index)    {        id = index;        bet = 0;        host = null;        guest = null;    }    public uint id;    public RoomPlayerInfo host;    public RoomPlayerInfo guest;    public long bet;}public class FIR_Rooms{    FIR_Rooms()    {        rooms = new Dictionary<uint, Room>();    }    public static FIR_Rooms GetSingleton()    {        if (instance_ == null)            instance_ = new FIR_Rooms();        return instance_;    }    public void InitRooms()    {        rooms.Clear();        for(uint index = beginid; index < beginid + roomNum; index++)        {            Room room = new Room(index);            rooms.Add(room.id, room);        }    }    public void ReadRoomData(UMessage msg)    {        bool isend = msg.ReadBool();        short roomNumByMsg = msg.ReadShort();        for(int index = 0; index < roomNumByMsg; index++)        {            uint roomid = msg.ReadUInt();            uint hostid = msg.ReadUInt();            long bet = msg.ReadLong();            byte state = msg.ReadByte();            byte playerNumber = msg.ReadByte();            for(byte playerindex = 0; playerindex < playerNumber; playerindex++)            {                uint userid = msg.ReadUInt();                rooms[roomid].bet = bet;                if (userid == hostid)                {                    rooms[roomid].host = null;                    rooms[roomid].host = new RoomPlayerInfo();                    rooms[roomid].host.isleft = msg.ReadByte() == (byte)GameCity.PlayerSitSide_Enum.PlayerSitSide_Left;                    rooms[roomid].host.icon = msg.ReadUInt();                    rooms[roomid].host.url = msg.ReadString();                    rooms[roomid].host.name = msg.ReadString();                    rooms[roomid].host.playerid = userid;                }                else                {                    rooms[roomid].guest = null;                    rooms[roomid].guest = new RoomPlayerInfo();                    rooms[roomid].guest.isleft = msg.ReadByte() == (byte)GameCity.PlayerSitSide_Enum.PlayerSitSide_Left;                    rooms[roomid].guest.icon = msg.ReadUInt();                    rooms[roomid].guest.url = msg.ReadString();                    rooms[roomid].guest.name = msg.ReadString();                    rooms[roomid].guest.playerid = userid;                }            }        }    }    static FIR_Rooms instance_;    public Dictionary<uint, Room> rooms;    public byte state;    public byte level;    public uint beginid;    public int roomNum;}