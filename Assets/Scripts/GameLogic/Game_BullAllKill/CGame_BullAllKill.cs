using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEngine.EventSystems;using USocket.Messages;using UnityEngine.UI;using XLua;[Hotfix]public class CGame_BullAllKill : CGameBase{    GameObject pickroot_;    BAK_StartGame game_;    public CGame_BullAllKill() : base(GameKind_Enum.GameKind_BullAllKill)    {    }    public override void Initialization()    {        base.Initialization();        InitBullAllKillMsg();        LoadBullPickResource();        GameData gamedata = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_BullAllKill);        if (gamedata == null)            return;        AudioManager.Instance.PlayBGMusic(gamedata.ResourceABName, BAK_DataCenter.Instance().audiodatas[1001].audioName);

        Switch2GamePanel();    }    public override void ProcessTick()    {        if (game_ != null)            game_.Update();    }    void InitBullAllKillMsg()    {        CMsgDispatcher.GetInstance().RegMsgDictionary(                (uint)GameCity.EMSG_ENUM.CCMsg_BULLKILL_SM_CHOOSElEVEL, BackChooseLevel);        CMsgDispatcher.GetInstance().RegMsgDictionary(                (uint)GameCity.EMSG_ENUM.CCMsg_BULLKILL_SM_ENTERROOM, BackEnterRoom);    }    void LoadBullPickResource()    {        //GameData gamedata = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_BullAllKill);        //if (gamedata != null)        //{        //    AssetBundle bundle = AssetBundleManager.GetAssetBundle(gamedata.ResourceABName);        //    if (bundle == null)        //        return;        //    UnityEngine.Object obj0 = bundle.LoadAsset("Niu5_Lobby");        //    pickroot_ = (GameObject)GameMain.instantiate(obj0);        //    GameObject background = GameObject.Find("Canvas/Root");        //    pickroot_.transform.SetParent(background.transform, false);        //    GameObject xscBtn = pickroot_.transform.FindChild("Middle").FindChild("Middle_Button").        //        FindChild("Button_1Xinshou").FindChild("ImageBG").FindChild("Button_Start").gameObject;        //    XPointEvent.AutoAddListener(xscBtn, OnClickXsc, null);        //    GameObject returnBtn = pickroot_.transform.FindChild("Top").FindChild("ButtonReturn").gameObject;        //    XPointEvent.AutoAddListener(returnBtn, OnBack2Hall, null);        //    LoadPlayerResource();        //}

        UMessage chooselevel = new UMessage((uint)GameCity.EMSG_ENUM.CCMsg_BULLKILL_CM_CHOOSElEVEL);

        chooselevel.Add(GameMain.hall_.GetPlayerId());
        chooselevel.Add((byte)1);

        HallMain.SendMsgToRoomSer(chooselevel);

        GameData gamedata = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_BullHappy);
        if (gamedata == null)
            return;

        AudioManager.Instance.PlaySound(gamedata.ResourceABName, BAK_DataCenter.Instance().audiodatas[1002].audioName);    }    void OnClickXsc(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            CustomAudio.GetInstance().PlayCustomAudio(1002);            UMessage chooselevel = new UMessage((uint)GameCity.EMSG_ENUM.CCMsg_BULLKILL_CM_CHOOSElEVEL);            chooselevel.Add(GameMain.hall_.GetPlayerId());            chooselevel.Add((byte)1);            HallMain.SendMsgToRoomSer(chooselevel);            GameData gamedata = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_BullAllKill);            if (gamedata == null)                return;            AudioManager.Instance.PlaySound(gamedata.ResourceABName, BAK_DataCenter.Instance().audiodatas[1002].audioName);        }    }    void OnBack2Hall(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerClick)        {            CustomAudio.GetInstance().PlayCustomAudio(1002);            GameMain.hall_.SwitchToHallScene();            GameData gamedata = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_BullAllKill);            if (gamedata == null)                return;            AudioManager.Instance.PlaySound(gamedata.ResourceABName, BAK_DataCenter.Instance().audiodatas[1002].audioName);        }    }    bool BackEnterRoom(uint _msgType, UMessage msg)    {        BAK_DataCenter.Instance().ReadEnterRoomMsgFromServer(msg);
        //Switch2GamePanel();
        game_.RefreshGamePanel();        if ((uint)BAK_DataCenter.Instance().ber.roomstate == (uint)GameCity.EMSG_ENUM.CCMsg_BULLKILL_SM_ROOMSTATE)        {            CCustomDialog.OpenCustomWaitUI(2417);        }        return true;    }    bool BackChooseLevel(uint _msgType, UMessage msg)    {        CCustomDialog.OpenCustomConfirmUI(2016);        return true;    }    void LoadPlayerResource()    {        AssetBundle bundle = AssetBundleManager.GetAssetBundle(GameDefine.HallAssetbundleName);        if (bundle == null)            return;        if (GameMain.hall_.GetPlayerData().GetVipLevel() > 0)        {            GameObject vip0Img = pickroot_.transform.Find("Bottom").Find("PlayerInfoBG").                    Find("Image_Vip").Find("Vip_Text").Find("Num").gameObject;            GameObject vipImg = pickroot_.transform.Find("Bottom").Find("PlayerInfoBG").                    Find("Image_Vip").Find("Vip_Text").Find("Num (1)").gameObject;            Image vipicon = pickroot_.transform.Find("Bottom").Find("PlayerInfoBG").                    Find("Image_Vip").gameObject.GetComponent<Image>();            vip0Img.SetActive(false);            vipImg.SetActive(true);            vipImg.GetComponent<Image>().sprite =                bundle.LoadAsset<Sprite>("zjm_word_sz_vip_" + GameMain.hall_.GetPlayerData().GetVipLevel());            vipicon.sprite = bundle.LoadAsset<Sprite>("zjm_word_vip_jin");        }        RefreshPlayerInfo();    }    void RefreshPlayerInfo()    {        Image icon = pickroot_.transform.Find("Bottom").Find("PlayerInfoBG").            Find("Image_HeadFram").Find("Image_Mask").Find("Image_Head").            gameObject.GetComponent<Image>();        icon.sprite = GameMain.hall_.GetIcon(GameMain.hall_.GetPlayerData().GetPlayerIconURL(),            GameMain.hall_.GetPlayerId(), (int)GameMain.hall_.GetPlayerData().PlayerIconId);        Text playername = pickroot_.transform.Find("Bottom").Find("PlayerInfoBG").            Find("TextName").gameObject.GetComponent<Text>();        playername.text = GameMain.hall_.GetPlayerData().GetPlayerName();        Text diamond = pickroot_.transform.Find("Bottom").Find("Image_DiamondFrame").            Find("Text_Diamond").gameObject.GetComponent<Text>();        diamond.text = GameMain.hall_.GetPlayerData().GetDiamond().ToString();        SetPlayerMoney();    }    public override void RefreshGamePlayerCoin(uint AddMoney)    {        base.RefreshGamePlayerCoin(AddMoney);        Text cointext = pickroot_.transform.Find("Bottom").Find("Image_coinframe").            Find("Text_Coin").gameObject.GetComponent<Text>();        long coin;        long.TryParse(cointext.text, out coin);        coin += AddMoney;        cointext.text = coin.ToString();        if (game_ != null)            game_.SetPlayerCoinByRedBag(AddMoney);    }    void SetPlayerMoney()    {        Text coin = pickroot_.transform.Find("Bottom").Find("Image_coinframe").            Find("Text_Coin").gameObject.GetComponent<Text>();        coin.text = GameMain.hall_.GetPlayerData().GetCoin().ToString();    }    void Switch2GamePanel()    {        if (game_ == null)            game_ = new BAK_StartGame(pickroot_);        else        {            game_.Start(pickroot_);                    }        InitialCommonUI();                    if(pickroot_ != null)            pickroot_.SetActive(false);    }

    public override void ReconnectSuccess()
    {
        base.ReconnectSuccess();

        CCustomDialog.OpenCustomConfirmUI(1018, (p) => game_.Exit());
    }}