using System.Collections.Generic;using UnityEngine;using UnityEngine.UI;using UnityEngine.EventSystems;using USocket.Messages;using XLua;[Hotfix]public class LB_DoubleCard{    GameObject root_;    int select;    List<Sprite> cardsSprites_;    public  USlotGameResult sgr_;    public bool isReward;    Sprite backcard;    public USlotCardResult scr_;    float backTime;    float currentBacktime;    bool isStartBack;    long currentReward;    long currentDoubleReward;    long currentForableReward;    List<GameObject> MoveCards;    float moveSpeed;    Vector3 targetPosition;    // Use this for initialization    public void Start ( GameObject root, USlotGameResult sgr, USlotCardResult scr)    {        root_ = root;        sgr_ = sgr;        scr_ = scr;        currentBacktime = 0.0f;        backTime = 2.0f;        isStartBack = false;        currentReward = 0;        currentDoubleReward = 0;        currentForableReward = 0;        moveSpeed = 1000.0f;        targetPosition = root_.transform.Find("CardOpen").Find("Card (2)").position;        MoveCards = new List<GameObject>();        SetDiamond(GameMain.hall_.GetPlayerData().GetDiamond());        SetDoubleReward(0);        SetForableReward(0);        SetCurrentReward(0);        //SetLeftTimes(sgr_.cardNum);        SetLeftTimes(5);        InitCardSprites();        InitButtonEvents();    }	    void reset()    {        SetDiamond(GameMain.hall_.GetPlayerData().GetDiamond());        SetDoubleReward(0);        SetForableReward(0);        SetCurrentReward(0);        //SetLeftTimes(sgr_.cardNum);        SetLeftTimes(5);    }    void InitCardSprites()    {        cardsSprites_ = new List<Sprite>();        GameData gamedata2 = CCsvDataManager.Instance.GameDataMgr.GetGameData((byte)GameKind_Enum.GameKind_LaBa);        if (gamedata2 != null)        {            AssetBundle bundle = AssetBundleManager.GetAssetBundle(gamedata2.ResourceABName);            if (bundle != null)            {                Sprite fpSprite = bundle.LoadAsset<Sprite>("icon_zp_fp");                cardsSprites_.Add(fpSprite);                Sprite txSprite = bundle.LoadAsset<Sprite>("icon_zp_tx");                cardsSprites_.Add(txSprite);                Sprite htSprite = bundle.LoadAsset<Sprite>("icon_zp_ht");                cardsSprites_.Add(htSprite);                Sprite mhSprite = bundle.LoadAsset<Sprite>("icon_zp_mh");                cardsSprites_.Add(mhSprite);                backcard = bundle.LoadAsset<Sprite>("icon_zp_bm");            }        }    }    // Update is called once per frame    public void Update ()    {        if (isStartBack)        {            currentBacktime += Time.deltaTime;            if (currentBacktime >= backTime)            {                currentBacktime = 0.0f;                isStartBack = false;                Image openCard = root_.transform.Find("CardClose").Find("Card (2)").gameObject.GetComponent<Image>();                openCard.sprite = backcard;                if ((int)scr_.times <= 0)                {                    CloseCardPanel();                }            }        }        MoveOpenCard();    }    void InitButtonEvents()    {        GameObject endbtn = root_.transform.Find("EndBG").Find("ButtonEnd").gameObject;        XPointEvent.AutoAddListener(endbtn, OnCloseAndGetReward, null);        GameObject redbtn = root_.transform.Find("Fanbeix2").Find("Button_Red").gameObject;        XPointEvent.AutoAddListener(redbtn, OnSelectRedCard, null);        GameObject blackbtn = root_.transform.Find("Fanbeix2").Find("Button_Black").gameObject;        XPointEvent.AutoAddListener(blackbtn, OnSelectBlackCard, null);        GameObject heartbtn = root_.transform.Find("Fanbeix4").Find("Button_Heart").gameObject;        XPointEvent.AutoAddListener(heartbtn, OnSelectHeartCard, null);        GameObject diamondbtn = root_.transform.Find("Fanbeix4").Find("Button_Diamond").gameObject;        XPointEvent.AutoAddListener(diamondbtn, OnSelectDiamondCard, null);        GameObject spadebtn = root_.transform.Find("Fanbeix4").Find("Button_Spade").gameObject;        XPointEvent.AutoAddListener(spadebtn, OnSelectSpadeCard, null);        GameObject clubbtn = root_.transform.Find("Fanbeix4").Find("Button_Club").gameObject;        XPointEvent.AutoAddListener(clubbtn, OnSelectClubCard, null);    }    void OnCloseAndGetReward(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            CloseCardPanel();        }    }    void SendSelectMsg(byte nType)    {        UMessage cardMsg = new UMessage((uint)GameCity.SlotSecondMsg.LabaMsg_CM_DOUBLEREWORD);        //cardMsg.Add((uint)GameCity.SlotSecondMsg.LabaMsg_CM_DOUBLEREWORD);        cardMsg.Add(GameMain.hall_.GetPlayerData().GetPlayerID());        cardMsg.Add(nType);        HallMain.SendMsgToRoomSer(cardMsg);    }    void OnSelectRedCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 0;            SendSelectMsg(2);        }    }    void OnSelectBlackCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 1;            SendSelectMsg(2);        }    }    void OnSelectHeartCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 3;            SendSelectMsg(4);        }    }    void OnSelectDiamondCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 2;            SendSelectMsg(4);        }    }    void OnSelectSpadeCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 4;            SendSelectMsg(4);        }    }    void OnSelectClubCard(EventTriggerType eventtype, object button, PointerEventData eventData)    {        if (eventtype == EventTriggerType.PointerUp)        {            select = 5;            SendSelectMsg(4);        }    }    public void ShowCardPanel()    {        root_.SetActive(true);        reset();    }    public void CloseCardPanel()    {        root_.SetActive(false);    }    void SetDiamond(long diamond)    {        Text diamondTx = root_.transform.Find("DiamondBG").Find("Image_DiamondFrame").            Find("Text_Diamond").gameObject.GetComponent<Text>();        diamondTx.text = diamond.ToString();    }    void SetDoubleReward(long reward)    {        Text doubleTx = root_.transform.Find("Fanbeix2").            Find("ImageText").Find("TextNum").gameObject.GetComponent<Text>();        doubleTx.text = reward.ToString();    }    void SetForableReward(long reward)    {        Text forableTx = root_.transform.Find("Fanbeix4").            Find("ImageText").Find("TextNum").gameObject.GetComponent<Text>();        forableTx.text = reward.ToString();    }    void SetCurrentReward(long reward)    {        Text rewardTx = root_.transform.Find("JiangjinBG").Find("TextNum").gameObject.GetComponent<Text>();        rewardTx.text = reward.ToString();    }    void SetLeftTimes(byte times)    {        Text timesTx = root_.transform.Find("CishuBG").Find("TextNum").gameObject.GetComponent<Text>();        timesTx.text = ((int)times).ToString();    }    Image CreateCard()    {        GameObject img = new GameObject("card");        Image result = img.AddComponent<Image>();        result.rectTransform.sizeDelta = new Vector2(120.0f, 162.0f); ;        img.transform.position = root_.transform.Find("CardClose").Find("Card (2)").position;        img.transform.rotation = root_.transform.Find("CardClose").Find("Card (2)").rotation;        img.transform.SetParent(root_.transform.Find("CardClose"));        MoveCards.Add(img);        return result;    }    void MoveOpenCard()    {        for (int index = 0; index < MoveCards.Count; index++)        {            if (MoveCards[index] == null)                continue;            MoveCards[index].transform.Translate(new Vector3(moveSpeed * Time.deltaTime, 0.0f, 0.0f));            if (MoveCards[index].transform.position.x >= targetPosition.x)            {                MoveCards[index].transform.SetParent(root_.transform.Find("CardOpen"));                MoveCards.Remove(MoveCards[index]);            }        }    }    void OpenCard()    {        System.Random rd = new System.Random();        Image openCard = CreateCard();        if (select < 2)        {            if (isReward)            {                if (select == 0)                    openCard.sprite = cardsSprites_[rd.Next(0, 1)];                else                    openCard.sprite = cardsSprites_[rd.Next(2, 3)];            }            else            {                if (select == 1)                    openCard.sprite = cardsSprites_[rd.Next(0, 1)];                else                    openCard.sprite = cardsSprites_[rd.Next(2, 3)];            }        }        else        {            if (isReward)                openCard.sprite = cardsSprites_[select - 2];            else            {                List<int> randomList = new List<int>() { 0, 1, 2, 3 };                randomList.Remove(select - 2);                int index = rd.Next(0, 3);                openCard.sprite = cardsSprites_[randomList[index]];            }        }        isStartBack = true;    }    public void ShowResult()    {        GameMain.hall_.GetPlayerData().SetCoin(scr_.coin);        if (scr_.addCoin > 0)            isReward = true;        else            isReward = false;        OpenCard();        currentReward += scr_.addCoin;        SetCurrentReward(currentReward);        if (select < 2)        {            currentDoubleReward += scr_.addCoin;            SetDoubleReward(currentDoubleReward);        }        else        {            currentForableReward += scr_.addCoin;            SetForableReward(currentForableReward);        }        SetLeftTimes(scr_.times);    }}