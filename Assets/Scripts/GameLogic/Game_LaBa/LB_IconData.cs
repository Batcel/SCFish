using System.Collections;using System.Collections.Generic;using UnityEngine;using XLua;[LuaCallCSharp]public class IconData{    public byte iconid;             //id    public string name;             //名称    public string iconName;         //图片名称    public float normalRate;        //常规概率    public float payRate;           //抽水比率    public float highRate;          //放水概率    public uint threeRate;          //三个倍数    public uint fourRate;           //四个倍数    public uint fiveRate;           //五个倍数    public uint fullScreenRate;     //全屏倍数}[Hotfix]public class LB_IconData{    private Dictionary<byte, IconData> IconDict;    //private List<string[]> allArrary;    public LB_IconData()    {        IconDict = new Dictionary<byte, IconData>();    }    /// <summary>    /// 读取拉霸图标数据表    /// </summary>    public void LoadGameDataFile()    {        List<string[]> strList;        CReadCsvBase.ReaderCsvDataFromAB(GameDefine.CsvAssetbundleName, GameDefine.SlotCsvFileName, out strList);        int columnCount = strList.Count;        for (int i = 2; i < columnCount; i++)        {            IconData icondata = new IconData();            byte.TryParse(strList[i][0], out icondata.iconid);            icondata.name = strList[i][1];            icondata.iconName = strList[i][2];            float.TryParse(strList[i][3], out icondata.normalRate);            float.TryParse(strList[i][4], out icondata.payRate);            float.TryParse(strList[i][5], out icondata.highRate);            uint.TryParse(strList[i][6], out icondata.threeRate);            uint.TryParse(strList[i][7], out icondata.fourRate);            uint.TryParse(strList[i][8], out icondata.fiveRate);            uint.TryParse(strList[i][9], out icondata.fullScreenRate);            IconDict.Add(icondata.iconid, icondata);        }    }    /// <summary>    /// 获取拉霸图标数据    /// </summary>    /// <param name="itemId"></param>    /// <returns></returns>    public IconData GetIconData(byte iconid)    {        if (IconDict.ContainsKey(iconid))            return IconDict[iconid];        return null;    }    public int GetDataLength()    {        return IconDict.Count;    }}