using UnityEngine;using UnityEngine.EventSystems;using UnityEngine.UI;public class XButton : Button{    /*public delegate void CallBack(EventTriggerType eventtype,  object message);    private object message;    private CallBack funCallBack;    public  void AddListener(CallBack callback, object param)    {        funCallBack += callback;        message = param;    }    //public override void OnPointerEnter(PointerEventData eventData)    //{    //    Debug.Log("OnPointerEnter" + eventData.button);    //}    //public override void OnPointerExit(PointerEventData eventData)    //{    //    Debug.Log("OnPointerExit" + eventData.button);    //}    private void ExcuteCallBack(EventTriggerType type)    {        if (funCallBack != null)        {            funCallBack(type, message);        }      }*/    /// <summary>    /// 控制普通状态    /// </summary>    private bool normal = true;    /// <summary>    /// 控制高亮状态    /// </summary>    private bool highlighted;    /// <summary>    /// 控制按下状态    /// </summary>    private bool pressed;    /// <summary>    /// 控制禁用状态    /// </summary>    private bool disabled;    private bool help = true;    //private bool newNormal =     private CanvasGroup group;    protected override void Awake()    {        if (!gameObject.GetComponent<CanvasGroup>())        {           group = gameObject.AddComponent<CanvasGroup>();        }    }    void Update()    {        if (normal && help)        {            DoStateTransition(SelectionState.Normal,true);        }        else if (highlighted)        {            DoStateTransition(SelectionState.Highlighted, true);        }else if(pressed)        {            DoStateTransition(SelectionState.Pressed, true);        }else if(disabled)        {            DoStateTransition(SelectionState.Disabled, true);        }    }    /// <summary>    /// 设置为普通状态    /// </summary>    public void SetNormal()    {        normal = true;        highlighted = false;        pressed = false;        disabled = false;        if (group == null)        {            group = GetComponent<CanvasGroup>();            if (group == null)            {                group = gameObject.AddComponent<CanvasGroup>();            }                    }        if(group.blocksRaycasts)        {            help = true;        }        //interactable = true;    }    /// <summary>    /// 设置为焦点状态    /// </summary>    public void SetHighlighted()    {        normal = false;        highlighted = true;        pressed = false;        disabled = false;        if (group == null)        {            group = GetComponent<CanvasGroup>();            if (group == null)            {                group = gameObject.AddComponent<CanvasGroup>();            }        }        group.blocksRaycasts = true;        help = true;        //interactable = true;    }    /// <summary>    /// 设置为按下状态    /// </summary>    public void SetPressed()    {        normal = false;        highlighted = false;        pressed = true;        disabled = false;    }    /// <summary>    /// 设置禁用    /// </summary>    public void SetDisabled()    {        normal = false;        highlighted = false;        pressed = false;        disabled = true;        if (group == null)        {            group = GetComponent<CanvasGroup>();            if (group == null)            {                group = gameObject.AddComponent<CanvasGroup>();            }        }        group.blocksRaycasts = false;        help = false;        //interactable = false;    }    //按钮 按下 或者一直按下    public override void OnPointerDown(PointerEventData eventData)    {    }    //按钮 按下后松开    public override void OnPointerUp(PointerEventData eventData)    {            }}