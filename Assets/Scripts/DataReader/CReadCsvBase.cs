using System;using System.IO;using System.Text;using XLua;

//读取 csv
using UnityEngine;using System.Collections;using System.Collections.Generic;[LuaCallCSharp]public class CReadCsvBase{	//private static Encoding gb2312Encoding = Encoding.GetEncoding("gb2312");	//private const string strUnityRootPath = "Assets/Resources/";	//private const string strCsvEndName = ".csv";//	private  string[]  splitStrings = { "\r\n" };	private const char splitCsv = ',';	private const StringSplitOptions splitOp = StringSplitOptions.None;	private int columnCount;   //行	private int rowCount;      //列	//private string[][] allArrary;	private List<string[]> allArrary;	private StreamReader filereader;	public delegate void CallBackGetValue (string[] value,int column);	public CReadCsvBase (string path, CallBackGetValue callback)	{		columnCount = 0;		rowCount = 0;		//allArrary = null;		allArrary = new List<string[]> ();		ReadCsv (path);		getAllValue (callback);	}	void ReadCsv (string path)	{		//string fullpath;		filereader = null;		//string logtext= null;		//if(Application.platform == RuntimePlatform.Android )		{			/*fullpath =  "file://" +Application.streamingAssetsPath+"/"+path +".txt";			WWW w3file =new WWW(fullpath);			while(!w3file.isDone) { }*/			//string csvtext =w3file.text;			//创建文件			/*StreamWriter sw;			string destpath = Application.persistentDataPath+"/test.txt";			File.Delete(destpath);			FileInfo t = new FileInfo(destpath);			sw = t.CreateText();			sw.Write(w3file.text);			sw.Close();			sw.Dispose();*///#if UNITY_ANDROID      //{        			AssetBundle bundle = AssetBundleManager.GetAssetBundle("csv.assetbundle");			TextAsset datatxt = bundle.LoadAsset (path,typeof(TextAsset)) as TextAsset;			MemoryStream stream = new MemoryStream (datatxt.bytes);			filereader =new StreamReader(stream);}//#else//        }         {            //fullpath = Application.dataPath + "/Res/csv/" + path;            //filereader = new StreamReader(fullpath);		}//#endif		//LoadingUIContorl.SetDebugLog ("fulllpath" + fullpath);		string strline = "";		while (strline!=null) 		{			strline = filereader.ReadLine ();			if (strline != null && strline.Length > 0)			{				allArrary.Add (strline.Split (splitCsv));			}		}		rowCount = allArrary [0].Length; 		columnCount = allArrary.Count;		filereader.Close ();		filereader.Dispose ();	} 	//获得第几行 第几列的值	string getValue (int colum, int row)	{		if (row < allArrary [colum].Length) 		{			return allArrary [colum] [row];            		}		return null;	}	public void getAllValue (CallBackGetValue callback)	{		//i=1 忽略第一行 列名		for (int i = 1; i < columnCount; i++) 		{			//判断行数是否相同			if (callback != null && allArrary [i].Length == rowCount) 			{				callback (allArrary [i], i);			}		}	}    /// <summary>    /// 从ab中读取csv表数据    /// </summary>    /// <param name="assetname">assetbundle名称</param>    /// <param name="filename">文件名</param>    /// <param name="strlist">返回的字符串list</param>    public static void ReaderCsvDataFromAB(string assetname,string filename,out List<string[]> strlist)    {        strlist = new List<string[]>();        StreamReader filereader = null;        AssetBundle bundle = AssetBundleManager.GetAssetBundle(assetname);        if (bundle == null)            return;        TextAsset datatxt = bundle.LoadAsset(filename, typeof(TextAsset)) as TextAsset;        if (datatxt == null )            return;        MemoryStream stream = new MemoryStream(datatxt.bytes);        filereader = new StreamReader(stream);        string strline = "";        while (strline != null)        {            strline = filereader.ReadLine();            if (strline != null && strline.Length > 0)            {                strlist.Add(strline.Split(splitCsv));            }        }        filereader.Close();        filereader.Dispose();    }    /// <summary>
    /// 从文件读取表
    /// </summary>
    /// <param name="filepathname"></param>
    /// <param name="strlist"></param>    public static void ReaderCsvDataFromFile(string filepathname, out List<string[]> strlist)
    {
        strlist = new List<string[]>();
        if (!File.Exists(filepathname))
            return; 
        StreamReader sr = new StreamReader(filepathname);
        string strline = "";
 
        while (strline != null)
        {
            strline = sr.ReadLine();
            if (strline != null && strline.Length > 0)            {                strlist.Add(strline.Split(splitCsv));            }
        }        sr.Close();        sr.Dispose();
    }

    /// <summary>    /// 从www中读取csv表数据    /// </summary>    /// <param name="www">assetbundle名称</param>    /// <param name="strlist">返回的字符串list</param>    public static void ReaderCsvDataFromWWW(WWW www,out List<string[]> strlist)    {        strlist = new List<string[]>();        if (www == null)
        {
            return;
        }        MemoryStream stream = new MemoryStream(www.bytes);        StreamReader filereader = new StreamReader(stream);        string strline = "";        while (strline != null)        {            strline = filereader.ReadLine();            if (strline != null && strline.Length > 0)            {                strlist.Add(strline.Split(splitCsv));            }        }        filereader.Close();        filereader.Dispose();    }}