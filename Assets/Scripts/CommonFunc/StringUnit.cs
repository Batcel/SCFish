using UnityEngine;using System.Collections;public class StringUnit {    private string mInfo = "";    private int mCountLen = 6; //正负占1位 数值提供5位    private int index = 0;    public string Content    {        get { return mInfo; }        set { mInfo = value; }    }    public void Write(string _value)    {        int len = _value.Length;        mInfo += GetString(len) + _value;    }    public void Write(int _value)    {        mInfo += GetString(_value);    }    public void Write(float _value)    {        mInfo += GetString(_value);    }    public void Write(bool _value)    {        if(_value) Write(0);        else Write(1);    }    public void Write(Vector2 _value)    {        mInfo += GetString(_value.x);        mInfo += GetString(_value.y);    }    public void Write(Vector3 _value)    {        mInfo += GetString(_value.x);        mInfo += GetString(_value.y);        mInfo += GetString(_value.z);    }    public void Write(Color _value)    {        mInfo += GetString(_value.a);        mInfo += GetString(_value.r);        mInfo += GetString(_value.g);        mInfo += GetString(_value.b);    }    public Color ReadColor()    {        Color color = new Color();        color.a = ReadFloat();        color.r = ReadFloat();        color.g = ReadFloat();        color.b = ReadFloat();        return color;    }    public Vector3 ReadVector3()    {        Vector3 vt = new Vector3();        vt.x = ReadFloat();        vt.y = ReadFloat();        vt.z = ReadFloat();        return vt;    }    public Vector2 ReadVector2()    {        Vector2 vt = new Vector2();        vt.x = ReadFloat();        vt.y = ReadFloat();        return vt;    }    public string ReadString()    {        int len = ReadInt();        string value = mInfo.Substring(index, len);        index += len;        return value;    }    public int ReadInt()    {        int value = int.Parse(ClearZeroLefe(mInfo.Substring(index, mCountLen)));        index += mCountLen;        return value;    }    public float ReadFloat()    {        float value = float.Parse(ClearZeroLefe(mInfo.Substring(index, mCountLen)));        index += mCountLen;        return value;    }    public bool ReadBool()    {        int value = ReadInt();        return value == 0;    }    private string ClearZeroLefe(string _value)    {        int index=0;        for(int i=0;i<_value.Length;i++)        {            if (_value[i] == '0') index++;            else            {                if (_value[i] == '.') index--;                return _value.Substring(index, _value.Length - index);            }        }        return _value;    }    private string GetString(int _value)    {        int lenStr = _value.ToString().Length;        string zero = "";        for (int i = 0; i < (mCountLen - lenStr); i++)        {            zero += "0";        }        return zero + _value;    }    public string GetString(float _value)    {        string lenStr = string.Format("{0:F}",_value);        string zero = "";        int len = lenStr.Length;        for (int i = 0; i < (mCountLen - len); i++)        {            zero += "0";        }        return zero + lenStr;    }}