#if UNITY_ANDROID

using System;using System.Collections;using System.Collections.Generic;using System.IO;using System.Net;using System.Security.Cryptography;using System.Text;using UnityEngine;
/// <summary>/// Android 支付宝  微信支付/// </summary>public class AlipayWeChatPay{    private static AndroidJavaObject WeChatApi = null;    private static AndroidJavaObject PayApiActivity = null;

        void Awake()    {        //AliPayCallback("app_id=2016080500170765&biz_content=%7b%22body%22%3a%22%e6%88%91%e6%98%af%e6%b5%8b%e8%af%95%e6%95%b0%e6%8d%ae%22%2c%22out_trade_no%22%3a%2220170216test01%22%2c%22product_code%22%3a%22QUICK_MSECURITY_PAY%22%2c%22subject%22%3a%22App%e6%94%af%e4%bb%98%e6%b5%8b%e8%af%95DoNet%22%2c%22timeout_express%22%3a%2230m%22%2c%22total_amount%22%3a%220.01%22%7d&charset=utf-8&format=json&method=alipay.trade.app.pay&sign_type=RSA&timestamp=2017-06-07+16%3a49%3a12&version=1.0&sign=EaCNlHhIF4xG25sYzgkuSOpmFsncqJ7szXRbkUybn9Bfr%2b%2bex7mXSSP5UItgkUeSNS4YBjZ0QhKs0JtFa%2f8ouXR1AwK9QYd1R1TKuIV3GgobqA9RJa4LdR1u8DuRP5Ezg7BmJcmwxy8N%2bp3nZSn8gSmH25ISP%2fm%2f2wcogSa1sF0%3d");        if (Application.platform == RuntimePlatform.Android)        {            InitPayPlatformApi();            //ReqWxPay("wxa0ee9b89c991e4d8", "10201200200", "012010000512", "kdskfiuoe3kdioulkjqhd");            //ReqWxLogin();            //WxApiActivity.Call("SendMsgToWechat","welcome to xinyou world!");        }        /*HttpWebRequest request = WebRequest.Create("http://222.187.225.194:8080/luancher/Ios/SerResVersion.txt") as HttpWebRequest;        //request.Timeout =          request.Method = "GET";        //             byte[] receiptbt = Encoding.UTF8.GetBytes(args.purchasedProduct.receipt);        //             string receiptbase64 = Convert.ToBase64String(receiptbt);        //             StringBuilder postBuilder = new StringBuilder();        //             //postBuilder.Append(args.purchasedProduct.receipt);        //             byte[] bytes = Convert.FromBase64String(receiptbase64);        //         //             Stream stream = request.GetRequestStream();        //             stream.Write(bytes, 0, bytes.Length);        //             stream.Close();        request.BeginGetResponse(new AsyncCallback(ResponseCallback), request);*/    }         //请求支付宝支付    public static void RequestAliPay(string orderinfo,bool isSandBox = true)    {        if (PayApiActivity == null)            InitPayPlatformApi();        PayApiActivity.Call("AliPay", orderinfo, isSandBox);    }    /// <summary>    /// 获取androidacitivity    /// </summary>    /// <returns></returns>    public static AndroidJavaObject GetAndroidActivity()    {        if (PayApiActivity == null)            InitPayPlatformApi();         return PayApiActivity;    }    /// <summary>    /// 初始化支付宝微信支付SDK    /// </summary>    private static void InitPayPlatformApi()    {        if (WeChatApi == null)        {            AndroidJavaClass unityPlayer = new AndroidJavaClass("com.unity3d.player.UnityPlayer");            PayApiActivity = unityPlayer.GetStatic<AndroidJavaObject>("currentActivity");            //android: icon = "@drawable/app_icon"            WeChatApi = PayApiActivity.Call<AndroidJavaObject>("GetWxApi");            //AndroidJavaClass apiFactory = new AndroidJavaClass("com.tencent.mm.opensdk.openapi.WXAPIFactory");        }    }    private void ResponseCallback(IAsyncResult asyncResult)    {        HttpWebRequest request = (HttpWebRequest)asyncResult.AsyncState;        // 获取Response        HttpWebResponse response = request.EndGetResponse(asyncResult) as HttpWebResponse;        if (response.StatusCode == HttpStatusCode.OK)        {            // 读取请求内容            Stream responseStream = response.GetResponseStream();            byte[] buff = new byte[2048];            MemoryStream ms = new MemoryStream();            int len = -1;            while ((len = responseStream.Read(buff, 0, buff.Length)) > 0)            {                ms.Write(buff, 0, len);            }            byte[] temp = new byte[1024 * 10];            ms.Read(temp, 0, (int)ms.Length);            Debug.Log("receipt back data000 :" + System.Text.Encoding.Default.GetString(temp));            Debug.Log("receipt back data111 :" + System.Text.Encoding.Default.GetString(ms.GetBuffer()));            // 清理操作            responseStream.Close();            response.Close();            request.Abort();        }    }    public static string MD5Encrypt(string input)    {        MD5 md5 = new MD5CryptoServiceProvider();        byte[] t = md5.ComputeHash(Encoding.UTF8.GetBytes(input));        StringBuilder sb = new StringBuilder(32);        for (int i = 0; i < t.Length; i++)            sb.Append(t[i].ToString("x").PadLeft(2, '0'));        return sb.ToString();    }    /// <summary>    /// 生成微信支付签名    /// </summary>    /// <param name="paras"></param>    /// <returns></returns>    private static string GenerateSignString(Dictionary<string, string> paras)    {               SortedDictionary<string, string> dict = new SortedDictionary<string, string>();        foreach (var kv in paras)        {            dict.Add(kv.Key.Split('#')[0], kv.Value);        }        List<string> tmp = new List<string>();        foreach (var kv in dict)        {            tmp.Add(string.Format("{0}={1}", kv.Key, kv.Value));        }        tmp.Add("key=" + PayPlatformDefine.WxApiKey);        var signTmp = string.Join("&", tmp.ToArray());        var result = MD5Encrypt(signTmp).ToUpper();        return result;    }    /// <summary>    /// 微信APP是否有安装    /// </summary>    public static bool IsWxAppInstalled()    {        if (WeChatApi == null)            InitPayPlatformApi();        return WeChatApi.Call<bool>("isWXAppInstalled");     }    /// <summary>    /// 申请微信支付    /// </summary>    public static bool ReqWxPay(string prepayId,string noncestr)    {        if (WeChatApi == null)            InitPayPlatformApi();        Dictionary<string, string> paras = new Dictionary<string, string>();        //BY CG:由于wechat android sdk中的变量与签名标志不一致，所以分开写，#前面是签名属性，后面对应的SDK中变量名        paras.Add("appid#appId", PayPlatformDefine.WXAPPID);        paras.Add("partnerid#partnerId", PayPlatformDefine.WXMCH_ID); //商户号        paras.Add("prepayid#prepayId", prepayId); //预支付订单ID 这个是后台跟微信服务器交互后，微信服务器传给支付服务器，服务器传给客户端        paras.Add("package#packageValue", "Sign=WXPay"); //暂填写固定值Sign=WXPay        paras.Add("noncestr#nonceStr", noncestr); //随机字符串        Int32 timestamp = (Int32)(DateTime.Now.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;        paras.Add("timestamp#timeStamp", timestamp.ToString());        paras.Add("sign#sign", GenerateSignString(paras)); //应用签名        var payreq = new AndroidJavaObject("com.tencent.mm.opensdk.modelpay.PayReq");        foreach (var kv in paras)        {            payreq.Set(kv.Key.Split('#')[1], kv.Value);        }        bool ret = WeChatApi.Call<bool>("sendReq", payreq);        return ret;    }    /// <summary>    /// 请求微信登陆授权    /// </summary>    /// <returns></returns>    public static bool ReqWxLoginAuth()    {        if (PayApiActivity == null)            InitPayPlatformApi();        PayApiActivity.Call("WeChat_LoginAuth");         return true;    }    //截屏并保存图片    private  static IEnumerator  CaptureScreenshot(bool bTimeLine)    {        Int32 timestamp = (Int32)(DateTime.Now.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;        string screenshotname = GameDefine.ScreenshotSavePath + timestamp.ToString() + ".png";        string shotsavePath = screenshotname;
#if !UNITY_EDITOR        shotsavePath = screenshotname.Replace(Application.persistentDataPath + "/", "");
#endif        ScreenCapture.CaptureScreenshot(shotsavePath);        while (!File.Exists(screenshotname))        {           yield return new WaitForSeconds(0.05f);        }        PayApiActivity.Call("WeChat_ShareImage", screenshotname, bTimeLine);    }    //微信分享图片(true朋友圈，false好友)    public static bool WeChat_ShareImage(bool bTimeLine)    {        if (PayApiActivity == null)            InitPayPlatformApi();        //var sharereq = new AndroidJavaObject("com.tencent.mm.opensdk.modelmsg.SendMessageToWX.Req");        //scene为0，分享至好友,为1分享至朋友圈        //if (!bTimeLine)        //    sharereq.Set<int>("scene",0);        //else        //    sharereq.Set<int>("scene", 1);        //截图保存文件夹处理        GameMain.SC(CaptureScreenshot(bTimeLine));        //PayApiActivity.Call("WechatShareImage", screenshotname,bTimeLine);        return true;    }


    private static IEnumerator CaptureScreenRectShot(Canvas cans, RectTransform rect,bool bTimeLine)
    {

        Rect targetRect = GameFunction.GetSpaceRect(cans, rect, cans.worldCamera);

        Int32 timestamp = (Int32)(DateTime.Now.Subtract(new DateTime(1970, 1, 1))).TotalSeconds;        string screenshotname = GameDefine.ScreenshotSavePath + timestamp.ToString() + ".png";
        yield return new WaitForEndOfFrame();
        Texture2D tex = new Texture2D((int)targetRect.width, (int)targetRect.height, TextureFormat.RGBA32, false);

        tex.ReadPixels(targetRect, 0, 0);
        tex.Apply();
        File.WriteAllBytes(screenshotname, tex.EncodeToPNG());

        while (!File.Exists(screenshotname))        {
            yield return new WaitForSeconds(0.05f);        }
        Debug.Log("ShareImageRectToWechat:" + screenshotname);
        PayApiActivity.Call("WeChat_ShareImage", screenshotname, bTimeLine);
        
    }

    //微信分享屏幕区域截图图片(true朋友圈，false好友)
    public static bool WeChat_ShareRectImage(Canvas cans,RectTransform rect,bool bTimeLine)    {         if (PayApiActivity == null)             InitPayPlatformApi();
        GameMain.SC(CaptureScreenRectShot(cans,rect,bTimeLine));
        return true;    }

    //微信分享文本(true朋友圈，false好友)
    public static bool WeChat_ShareText(string sharetxt,bool bTimeLine)    {        if (PayApiActivity == null)
            InitPayPlatformApi();
        PayApiActivity.Call("WeChat_ShareText", sharetxt, bTimeLine);
        return true;    }    //微信分享URL(true朋友圈，false好友)
    public static bool WeChat_ShareURL(string urlTxt,string desctxt, bool bTimeLine)    {        if (PayApiActivity == null)
            InitPayPlatformApi();
        PayApiActivity.Call("WeChat_ShareURL", urlTxt, desctxt, bTimeLine);
        return true;    }}
#endif