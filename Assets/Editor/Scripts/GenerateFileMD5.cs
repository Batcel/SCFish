using UnityEngine;using UnityEditor;using System.Collections;using System.Collections.Generic;using System;using System.IO;using System.Security.Cryptography;public class CGenerateFileMD5{    public static string GenerateFileMd5(string filename)    {        string filemd5str = null;        try        {            using (var fileStream = File.OpenRead(filename))            {                MD5 md5 = MD5.Create();                //计算指定Stream 对象的哈希值                  byte[] fileMD5Bytes = md5.ComputeHash(fileStream);                //将byte[]装换成字符串(fileMD5Bytes);                                                    filemd5str = System.BitConverter.ToString(fileMD5Bytes).Replace("-", "").ToLower();            }        }        catch (Exception ex)        {            Debug.Log(ex.Message);        }        return filemd5str;    }    static void GenerateAssetBundleMd5(string srcFilePath,string md5filename)    {        string md5string = "";        DirectoryInfo fileDir = new DirectoryInfo(srcFilePath);        FileInfo[] files = fileDir.GetFiles();        if (files != null)        {            for (int i = 0; i < files.Length; i++)            {                if (files[i].Extension.Length < 5 )                    continue;                bool issceneorresource = false;                if (files[i].Extension.CompareTo(".scene") != 0)                {                    if (files[i].Extension.CompareTo(".resource") == 0)                        issceneorresource = true;                }                else                {                    issceneorresource = true;                }                if (!issceneorresource)                    continue;                string filemd5 = GenerateFileMd5(files[i].FullName);                md5string += files[i].Name + "," + filemd5 + "\r\n";            }            string md5file = srcFilePath + md5filename;            StreamWriter sw = null;            //检测文件是否存在            if (!File.Exists(md5file))            {                sw = File.CreateText(md5file);            }            else            {                sw = new StreamWriter(md5file);            }            sw.Write(md5string);            //File.WriteAllText(path, datatext);            sw.Close();            sw.Dispose();        }    }    [MenuItem("MD5/Generate Android AssetBundle")]    static void GenerateAndroidAssetBundleMd5()    {        string path = Application.dataPath + "/AssetBundles/Android/";        if (!Directory.Exists(path))        {            Debug.Log("GenerateAndroidAssetBundleMd5 Directory No Exists!");            return;        }        GenerateAssetBundleMd5(path,"AndroidAssetbundleMd5.txt");        Debug.Log("MD5 Android Assetbundle Finish");    }    [MenuItem("MD5/Generate IOS AssetBundle")]    static void GenerateIOSAssetBundleMd5()    {        string  path = Application.dataPath+"/AssetBundles/IOS/";        if (!Directory.Exists(path))        {            Debug.Log("GenerateIOSAssetBundleMd5 Directory No Exists!");            return;        }        GenerateAssetBundleMd5(path, "IOSAssetbundleMd5.txt");        Debug.Log("MD5 IOS Assetbundle Finish");    }}